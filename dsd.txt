-- orbit_68284528mmy3005.collection_tracking_vw source

CREATE OR REPLACE VIEW orbit_68284528mmy3005.collection_tracking_vw
AS SELECT "cd"."subject_id" AS "subject_id", "cd"."site_id" AS "site_id", "cd"."site_country_name" AS "site_country_name", "cd"."study_subject_status" AS "study_subject_status", "cd"."cohort" AS "cohort", "cd"."treatment_arm" AS "treatment_arm", "cd"."study_arm" AS "study_arm", "cd"."screening_date" AS "screening_date", "cd"."screen_failed_date" AS "screen_failed_date", "cd"."randomization_date" AS "randomization_date", "cd"."discontinuation_date" AS "discontinuation_date", "cd"."date_enrollment" AS "date_enrollment", "cd"."visit_date_exp" AS "visit_date_exp", "cd"."visit_window_days" AS "visit_window_days", "cd"."exp_visit_window_min" AS "exp_visit_window_min", "cd"."exp_visit_window_max" AS "exp_visit_window_max", "cd"."visit_date_actl" AS "visit_date_actl", "cd"."visit_name" AS "visit_name", "cd"."sp_visit_id" AS "sp_visit_id", "cd"."specimen_collection_date" AS "specimen_collection_date", "cd"."coal_visit_collection_dates" AS "coal_visit_collection_dates", "cd"."exp_visit" AS "exp_visit", "cd"."assessment" AS "assessment", "cd"."receiving_lab" AS "receiving_lab", "cd"."exp_specimen_class" AS "exp_specimen_class", "cd"."scheduled_collection" AS "scheduled_collection", "cd"."assessment_group" AS "assessment_group", "cd"."specimen_class" AS "specimen_class", "cd"."specimen_type" AS "specimen_type", "cd"."accession_number" AS "accession_number", "cd"."specimen_id" AS "specimen_id", "cd"."specimen_received_date" AS "specimen_received_date", "cd"."specimen_accession_date" AS "specimen_accession_date", "cd"."expected_temp" AS "expected_temp", "cd"."actual_specimen_condition" AS "actual_specimen_condition", "cd"."condition_flag" AS "condition_flag", "cd"."sample_query" AS "sample_query", "cd"."igd_ige_status" AS "igd_ige_status", "cd"."ig_test_date" AS "ig_test_date", "cd"."assessment_test" AS "assessment_test", "cd"."assessment_completed" AS "assessment_completed", "cd"."test_result_date" AS "test_result_date", "cd"."mrd_clone_status" AS "mrd_clone_status", "cd"."mrd_baseline" AS "mrd_baseline", "cd"."specimen_status" AS "specimen_status", "cd"."past_visit_date" AS "past_visit_date", "cd"."collection_status" AS "collection_status", "cd"."optional" AS "optional", "cd"."protocol_version" AS "protocol_version", "cd"."expected_collection" AS "expected_collection", "cd"."missed_collection_binary" AS "missed_collection_binary", "cd"."total_visit_collections" AS "total_visit_collections", "cd"."missed_visit_collections" AS "missed_visit_collections", "cd"."missed_all_collections" AS "missed_all_collections", CASE WHEN ("ms"."missed_count" IS NOT NULL AND ("ms"."missed_count" >= CAST(2 AS INT4))) THEN CAST(1 AS INT4) ELSE CAST(0 AS INT4) END AS "two_or_more_missed_collections" FROM (SELECT DISTINCT "ss"."subject_id" AS "subject_id", "ss"."site_id" AS "site_id", "s"."site_country_name" AS "site_country_name", "ss"."study_subject_status" AS "study_subject_status", "ss"."cohort" AS "cohort", "ss"."cohort" AS "treatment_arm", "ss"."arm" AS "study_arm", "d1"."screening_date" AS "screening_date", "d1"."screen_failed_date" AS "screen_failed_date", "d1"."randomization_date" AS "randomization_date", "d2"."discontinuation_date" AS "discontinuation_date", CAST(NULL AS TEXT) AS "date_enrollment", "v"."visit_date_exp" AS "visit_date_exp", REGEXP_REPLACE("cs"."visit_window", CAST('[^0-9]' AS TEXT), CAST('' AS TEXT)) AS "visit_window_days", CASE WHEN ("cs"."visit_window" LIKE CAST('%-%' AS TEXT)) THEN ("v"."visit_date_exp" - CAST(REGEXP_REPLACE("cs"."visit_window", CAST('[^0-9]' AS TEXT), CAST('' AS TEXT)) AS INT4)) ELSE "v"."visit_date_exp" END AS "exp_visit_window_min", CASE WHEN ("cs"."visit_window" LIKE CAST('%+%' AS TEXT)) THEN ("v"."visit_date_exp" + CAST(REGEXP_REPLACE("cs"."visit_window", CAST('[^0-9]' AS TEXT), CAST('' AS TEXT)) AS INT4)) ELSE "v"."visit_date_exp" END AS "exp_visit_window_max", "v"."visit_date_actl" AS "visit_date_actl", "v"."visit_name" AS "visit_name", "sp"."visit_id" AS "sp_visit_id", "sp"."specimen_collection_date" AS "specimen_collection_date", COALESCE("v"."visit_date_actl", "sp"."specimen_collection_date") AS "coal_visit_collection_dates", COALESCE("cs"."visit_name", "cs"."specimen_visit_id") AS "exp_visit", COALESCE("cs"."assessment", "cs2"."assessment") AS "assessment", COALESCE("cs"."receiving_lab", "cs2"."receiving_lab") AS "receiving_lab", COALESCE("cs"."specimen_class", "cs2"."specimen_class") AS "exp_specimen_class", CONCAT(CONCAT("cs"."specimen_visit_id", CAST('_' AS TEXT)), COALESCE("cs"."specimen_class", "cs2"."specimen_class")) AS "scheduled_collection", CASE WHEN ((COALESCE("cs"."receiving_lab", "cs2"."receiving_lab") = CAST('Cerba' AS TEXT)) OR (COALESCE("cs"."assessment", "cs2"."assessment") = CAST('MRD' AS TEXT))) THEN CAST('Biomarker' AS TEXT) ELSE CAST('Disease Evaluation' AS TEXT) END AS "assessment_group", "sp"."specimen_class" AS "specimen_class", "sp"."specimen_type" AS "specimen_type", "sp"."accession_number" AS "accession_number", "sp"."specimen_id" AS "specimen_id", "sp"."specimen_received_date" AS "specimen_received_date", "sp"."specimen_accession_date" AS "specimen_accession_date", COALESCE(REGEXP_REPLACE("st5"."cerba_expected_temp", CAST(' °C' AS TEXT), CAST('C' AS TEXT)), "cs"."expected_temp") AS "expected_temp", COALESCE("sp"."specimen_condition", "st4"."collection_criteria", REGEXP_REPLACE("st5"."cerba_actual_temp", CAST(' °C' AS TEXT), CAST('C' AS TEXT))) AS "actual_specimen_condition", CASE WHEN (("sp"."vendor_id" = CAST(21 AS INT4)) AND (UPPER("cs"."expected_temp") <> UPPER(COALESCE("sp"."specimen_condition", "st4"."collection_criteria", REGEXP_REPLACE("st5"."cerba_actual_temp", CAST(' °C' AS TEXT), CAST('C' AS TEXT)))))) THEN CAST('Flag' AS TEXT) WHEN (((("sp"."vendor_id" = CAST(5 AS INT4)) AND ("cs"."expected_temp" <> CAST('' AS TEXT))) AND (COALESCE("sp"."specimen_condition", "st4"."collection_criteria", REGEXP_REPLACE("st5"."cerba_actual_temp", CAST(' °C' AS TEXT), CAST('C' AS TEXT))) <> CAST('' AS TEXT))) AND ("cs"."expected_temp" <> COALESCE("sp"."specimen_condition", "st4"."collection_criteria", REGEXP_REPLACE("st5"."cerba_actual_temp", CAST(' °C' AS TEXT), CAST('C' AS TEXT))))) THEN CAST('Flag' AS TEXT) WHEN ((("sp"."vendor_id" = CAST(3 AS INT4)) AND (LOWER(COALESCE("sp"."specimen_condition", "st4"."collection_criteria", REGEXP_REPLACE("st5"."cerba_actual_temp", CAST(' °C' AS TEXT), CAST('C' AS TEXT)))) LIKE CAST('%received at ambient temperature%' AS TEXT))) OR ((LOWER(COALESCE("sp"."specimen_condition", "st4"."collection_criteria", REGEXP_REPLACE("st5"."cerba_actual_temp", CAST(' °C' AS TEXT), CAST('C' AS TEXT)))) = CAST('no' AS TEXT)) OR (LOWER(COALESCE("sp"."specimen_condition", "st4"."collection_criteria", REGEXP_REPLACE("st5"."cerba_actual_temp", CAST(' °C' AS TEXT), CAST('C' AS TEXT)))) = CAST('collection unacceptable' AS TEXT)))) THEN CAST('Flag' AS TEXT) ELSE CAST(NULL AS TEXT) END AS "condition_flag", CASE WHEN ("sp"."vendor_id" = CAST(5 AS INT4)) THEN "st1"."open_dcf" WHEN ("sp"."vendor_id" = CAST(21 AS INT4)) THEN SPLIT_PART("sp"."specimen_status", CAST('|' AS TEXT), CAST(2 AS INT4)) ELSE CAST(NULL AS VARCHAR) END AS "sample_query", "st2"."igd_ige_status" AS "igd_ige_status", "st2"."ig_test_date" AS "ig_test_date", "st3"."assessment_test" AS "assessment_test", "st3"."assessment_completed" AS "assessment_completed", "st3"."test_result_date" AS "test_result_date", "st6"."mrd_clone_status" AS "mrd_clone_status", "st6"."mrd_baseline" AS "mrd_baseline", CASE WHEN ("sp"."vendor_id" = CAST(21 AS INT4)) THEN SPLIT_PART("sp"."specimen_status", CAST('|' AS TEXT), CAST(1 AS INT4)) ELSE "sp"."specimen_status" END AS "specimen_status", COALESCE("v"."visit_date_actl", "sp"."specimen_collection_date") AS "past_visit_date", CASE WHEN ("sp"."specimen_collection_date" IS NOT NULL OR "sp"."specimen_id" IS NOT NULL) THEN CAST('Collected' AS TEXT) WHEN (((COALESCE("v"."visit_date_actl", "sp"."specimen_collection_date") IS NULL AND ((CASE WHEN ("cs"."visit_window" LIKE CAST('%+%' AS TEXT)) THEN ("v"."visit_date_exp" + CAST(REGEXP_REPLACE("cs"."visit_window", CAST('[^0-9]' AS TEXT), CAST('' AS TEXT)) AS INT4)) ELSE "v"."visit_date_exp" END + CAST(7 AS INT4)) >= GETDATE())) AND ("ss"."study_subject_status" <> CAST('Early Terminated' AS TEXT))) AND ("ss"."study_subject_status" <> CAST('Screen Failed' AS TEXT))) THEN CAST('Future Collection' AS TEXT) WHEN ((COALESCE("v"."visit_date_actl", "sp"."specimen_collection_date") IS NULL AND "v"."visit_date_exp" IS NULL) AND ((("ss"."study_subject_status" <> CAST('Screening' AS TEXT)) AND ("ss"."study_subject_status" <> CAST('Early Terminated' AS TEXT))) AND ("ss"."study_subject_status" <> CAST('Screen Failed' AS TEXT)))) THEN CAST('Future Collection' AS TEXT) WHEN (COALESCE("v"."visit_date_actl", "sp"."specimen_collection_date") IS NOT NULL AND (GETDATE() <= (CASE WHEN ("cs"."visit_window" LIKE CAST('%+%' AS TEXT)) THEN ("v"."visit_date_exp" + CAST(REGEXP_REPLACE("cs"."visit_window", CAST('[^0-9]' AS TEXT), CAST('' AS TEXT)) AS INT4)) ELSE "v"."visit_date_exp" END + CAST(7 AS INT4)))) THEN CAST('Pending' AS TEXT) WHEN (("sp"."specimen_collection_date" IS NULL AND COALESCE("v"."visit_date_actl", "sp"."specimen_collection_date") IS NOT NULL) AND (GETDATE() > (COALESCE("v"."visit_date_actl", "sp"."specimen_collection_date") + CAST(7 AS INT4)))) THEN CAST('Missed Collection' AS TEXT) WHEN ((COALESCE("v"."visit_date_actl", "sp"."specimen_collection_date") IS NULL AND ("ss"."study_subject_status" = CAST('Early Terminated' AS TEXT))) AND (("v"."visit_date_exp" >= "ss"."date_termination") OR "v"."visit_date_exp" IS NULL)) THEN CAST('Not Expected' AS TEXT) ELSE CAST(NULL AS TEXT) END AS "collection_status", CASE WHEN ((("cs"."visit_name" <> CAST('SCREENING' AS TEXT)) AND ("cs"."assessment" = CAST('Serum quantitative IgD/IgE' AS TEXT))) AND ("st2"."igd_ige_status" NOT LIKE CAST('%Positive%' AS TEXT))) THEN CAST('Yes' AS TEXT) ELSE CAST('No' AS TEXT) END AS "optional", CAST(NULL AS TEXT) AS "protocol_version", CAST(1 AS INT4) AS "expected_collection", CASE WHEN (CASE WHEN ("sp"."specimen_collection_date" IS NOT NULL OR "sp"."specimen_id" IS NOT NULL) THEN CAST('Collected' AS TEXT) WHEN (((COALESCE("v"."visit_date_actl", "sp"."specimen_collection_date") IS NULL AND ((CASE WHEN ("cs"."visit_window" LIKE CAST('%+%' AS TEXT)) THEN ("v"."visit_date_exp" + CAST(REGEXP_REPLACE("cs"."visit_window", CAST('[^0-9]' AS TEXT), CAST('' AS TEXT)) AS INT4)) ELSE "v"."visit_date_exp" END + CAST(7 AS INT4)) >= GETDATE())) AND ("ss"."study_subject_status" <> CAST('Early Terminated' AS TEXT))) AND ("ss"."study_subject_status" <> CAST('Screen Failed' AS TEXT))) THEN CAST('Future Collection' AS TEXT) WHEN ((COALESCE("v"."visit_date_actl", "sp"."specimen_collection_date") IS NULL AND "v"."visit_date_exp" IS NULL) AND ((("ss"."study_subject_status" <> CAST('Screening' AS TEXT)) AND ("ss"."study_subject_status" <> CAST('Early Terminated' AS TEXT))) AND ("ss"."study_subject_status" <> CAST('Screen Failed' AS TEXT)))) THEN CAST('Future Collection' AS TEXT) WHEN (COALESCE("v"."visit_date_actl", "sp"."specimen_collection_date") IS NOT NULL AND (GETDATE() <= (CASE WHEN ("cs"."visit_window" LIKE CAST('%+%' AS TEXT)) THEN ("v"."visit_date_exp" + CAST(REGEXP_REPLACE("cs"."visit_window", CAST('[^0-9]' AS TEXT), CAST('' AS TEXT)) AS INT4)) ELSE "v"."visit_date_exp" END + CAST(7 AS INT4)))) THEN CAST('Pending' AS TEXT) WHEN (("sp"."specimen_collection_date" IS NULL AND COALESCE("v"."visit_date_actl", "sp"."specimen_collection_date") IS NOT NULL) AND (GETDATE() > (COALESCE("v"."visit_date_actl", "sp"."specimen_collection_date") + CAST(7 AS INT4)))) THEN CAST('Missed Collection' AS TEXT) WHEN ((COALESCE("v"."visit_date_actl", "sp"."specimen_collection_date") IS NULL AND ("ss"."study_subject_status" = CAST('Early Terminated' AS TEXT))) AND (("v"."visit_date_exp" >= "ss"."date_termination") OR "v"."visit_date_exp" IS NULL)) THEN CAST('Not Expected' AS TEXT) ELSE CAST(NULL AS TEXT) END = CAST('Missed Collection' AS TEXT)) THEN CAST(1 AS INT4) ELSE CAST(0 AS INT4) END AS "missed_collection_binary", SUM(CAST(1 AS INT4)) OVER (PARTITION BY "ss"."subject_id", COALESCE("cs"."visit_name", "cs"."specimen_visit_id") ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS "total_visit_collections", SUM(CASE WHEN (CASE WHEN ("sp"."specimen_collection_date" IS NOT NULL OR "sp"."specimen_id" IS NOT NULL) THEN CAST('Collected' AS TEXT) WHEN (((COALESCE("v"."visit_date_actl", "sp"."specimen_collection_date") IS NULL AND ((CASE WHEN ("cs"."visit_window" LIKE CAST('%+%' AS TEXT)) THEN ("v"."visit_date_exp" + CAST(REGEXP_REPLACE("cs"."visit_window", CAST('[^0-9]' AS TEXT), CAST('' AS TEXT)) AS INT4)) ELSE "v"."visit_date_exp" END + CAST(7 AS INT4)) >= GETDATE())) AND ("ss"."study_subject_status" <> CAST('Early Terminated' AS TEXT))) AND ("ss"."study_subject_status" <> CAST('Screen Failed' AS TEXT))) THEN CAST('Future Collection' AS TEXT) WHEN ((COALESCE("v"."visit_date_actl", "sp"."specimen_collection_date") IS NULL AND "v"."visit_date_exp" IS NULL) AND ((("ss"."study_subject_status" <> CAST('Screening' AS TEXT)) AND ("ss"."study_subject_status" <> CAST('Early Terminated' AS TEXT))) AND ("ss"."study_subject_status" <> CAST('Screen Failed' AS TEXT)))) THEN CAST('Future Collection' AS TEXT) WHEN (COALESCE("v"."visit_date_actl", "sp"."specimen_collection_date") IS NOT NULL AND (GETDATE() <= (CASE WHEN ("cs"."visit_window" LIKE CAST('%+%' AS TEXT)) THEN ("v"."visit_date_exp" + CAST(REGEXP_REPLACE("cs"."visit_window", CAST('[^0-9]' AS TEXT), CAST('' AS TEXT)) AS INT4)) ELSE "v"."visit_date_exp" END + CAST(7 AS INT4)))) THEN CAST('Pending' AS TEXT) WHEN (("sp"."specimen_collection_date" IS NULL AND COALESCE("v"."visit_date_actl", "sp"."specimen_collection_date") IS NOT NULL) AND (GETDATE() > (COALESCE("v"."visit_date_actl", "sp"."specimen_collection_date") + CAST(7 AS INT4)))) THEN CAST('Missed Collection' AS TEXT) WHEN ((COALESCE("v"."visit_date_actl", "sp"."specimen_collection_date") IS NULL AND ("ss"."study_subject_status" = CAST('Early Terminated' AS TEXT))) AND (("v"."visit_date_exp" >= "ss"."date_termination") OR "v"."visit_date_exp" IS NULL)) THEN CAST('Not Expected' AS TEXT) ELSE CAST(NULL AS TEXT) END = CAST('Missed Collection' AS TEXT)) THEN CAST(1 AS INT4) ELSE CAST(0 AS INT4) END) OVER (PARTITION BY "ss"."subject_id", COALESCE("cs"."visit_name", "cs"."specimen_visit_id") ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS "missed_visit_collections", CASE WHEN (SUM(CAST(1 AS INT4)) OVER (PARTITION BY "ss"."subject_id", COALESCE("cs"."visit_name", "cs"."specimen_visit_id") ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) = SUM(CASE WHEN (CASE WHEN ("sp"."specimen_collection_date" IS NOT NULL OR "sp"."specimen_id" IS NOT NULL) THEN CAST('Collected' AS TEXT) WHEN (((COALESCE("v"."visit_date_actl", "sp"."specimen_collection_date") IS NULL AND ((CASE WHEN ("cs"."visit_window" LIKE CAST('%+%' AS TEXT)) THEN ("v"."visit_date_exp" + CAST(REGEXP_REPLACE("cs"."visit_window", CAST('[^0-9]' AS TEXT), CAST('' AS TEXT)) AS INT4)) ELSE "v"."visit_date_exp" END + CAST(7 AS INT4)) >= GETDATE())) AND ("ss"."study_subject_status" <> CAST('Early Terminated' AS TEXT))) AND ("ss"."study_subject_status" <> CAST('Screen Failed' AS TEXT))) THEN CAST('Future Collection' AS TEXT) WHEN ((COALESCE("v"."visit_date_actl", "sp"."specimen_collection_date") IS NULL AND "v"."visit_date_exp" IS NULL) AND ((("ss"."study_subject_status" <> CAST('Screening' AS TEXT)) AND ("ss"."study_subject_status" <> CAST('Early Terminated' AS TEXT))) AND ("ss"."study_subject_status" <> CAST('Screen Failed' AS TEXT)))) THEN CAST('Future Collection' AS TEXT) WHEN (COALESCE("v"."visit_date_actl", "sp"."specimen_collection_date") IS NOT NULL AND (GETDATE() <= (CASE WHEN ("cs"."visit_window" LIKE CAST('%+%' AS TEXT)) THEN ("v"."visit_date_exp" + CAST(REGEXP_REPLACE("cs"."visit_window", CAST('[^0-9]' AS TEXT), CAST('' AS TEXT)) AS INT4)) ELSE "v"."visit_date_exp" END + CAST(7 AS INT4)))) THEN CAST('Pending' AS TEXT) WHEN (("sp"."specimen_collection_date" IS NULL AND COALESCE("v"."visit_date_actl", "sp"."specimen_collection_date") IS NOT NULL) AND (GETDATE() > (COALESCE("v"."visit_date_actl", "sp"."specimen_collection_date") + CAST(7 AS INT4)))) THEN CAST('Missed Collection' AS TEXT) WHEN ((COALESCE("v"."visit_date_actl", "sp"."specimen_collection_date") IS NULL AND ("ss"."study_subject_status" = CAST('Early Terminated' AS TEXT))) AND (("v"."visit_date_exp" >= "ss"."date_termination") OR "v"."visit_date_exp" IS NULL)) THEN CAST('Not Expected' AS TEXT) ELSE CAST(NULL AS TEXT) END = CAST('Missed Collection' AS TEXT)) THEN CAST(1 AS INT4) ELSE CAST(0 AS INT4) END) OVER (PARTITION BY "ss"."subject_id", COALESCE("cs"."visit_name", "cs"."specimen_visit_id") ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)) THEN CAST(1 AS INT4) ELSE CAST(0 AS INT4) END AS "missed_all_collections" FROM (((((((((((((((SELECT "study_subject"."study_subject_id" AS "study_subject_id", "study_subject"."study_id" AS "study_id", "study_subject"."subject_id" AS "subject_id", "study_subject"."site_id" AS "site_id", "study_subject"."pre_screening_id" AS "pre_screening_id", "study_subject"."screening_id" AS "screening_id", "study_subject"."re_screening_id" AS "re_screening_id", "study_subject"."previous_subject_id" AS "previous_subject_id", "study_subject"."date_screening" AS "date_screening", "study_subject"."date_enrollment" AS "date_enrollment", "study_subject"."date_screen_failure" AS "date_screen_failure", "study_subject"."date_termination" AS "date_termination", "study_subject"."date_first_treat" AS "date_first_treat", "study_subject"."date_last_treat" AS "date_last_treat", "study_subject"."date_treat_termination" AS "date_treat_termination", "study_subject"."icf_date" AS "icf_date", "study_subject"."icf_withdrawal_date" AS "icf_withdrawal_date", "study_subject"."icf_reconsent_date" AS "icf_reconsent_date", "study_subject"."icf_storage_limit" AS "icf_storage_limit", "study_subject"."screen_fail_icf_date" AS "screen_fail_icf_date", "study_subject"."icf_type" AS "icf_type", "study_subject"."icf_version" AS "icf_version", "study_subject"."cohort" AS "cohort", "study_subject"."study_arm" AS "study_arm", "study_subject"."study_part" AS "study_part", "study_subject"."study_subject_status" AS "study_subject_status", "study_subject"."age" AS "age", "study_subject"."age_unit" AS "age_unit", "study_subject"."smoke_status" AS "smoke_status", "study_subject"."cancer_stage" AS "cancer_stage", "study_subject"."previous_study_id" AS "previous_study_id", "study_subject"."screening_route" AS "screening_route", "study_subject"."ethnicity" AS "ethnicity", "study_subject"."race" AS "race", "study_subject"."gender" AS "gender", "study_subject"."date_prescreened" AS "date_prescreened", "study_subject"."date_prescreen_failed" AS "date_prescreen_failed", "study_subject"."run_id" AS "run_id", "study_subject"."composite_primary_key" AS "composite_primary_key", "study_subject"."row_id" AS "row_id", CASE WHEN ("study_subject"."cohort" = CAST('DVRd + ASCT + DVRd + lenalidomide' AS TEXT)) THEN CAST('A' AS TEXT) WHEN ("study_subject"."cohort" = CAST('DVRd + Cilta-cel + lenalidomide' AS TEXT)) THEN CAST('B' AS TEXT) ELSE CAST(NULL AS TEXT) END AS "arm" FROM "orbit_68284528mmy3005"."study_subject" AS "study_subject") AS "ss" LEFT JOIN (SELECT "unnamed_pivot49"."subject_id" AS "subject_id", "unnamed_pivot49"."date randomized" AS "randomization_date", "unnamed_pivot49"."date screened" AS "screening_date", "unnamed_pivot49"."date screen failed" AS "screen_failed_date" FROM (SELECT "visit"."subject_id" AS "subject_id", "visit"."visit_name" AS "visit_name", "visit"."visit_type" AS "visit_type", "visit"."visit_date_actl" AS "visit_date_actl" FROM "orbit_68284528mmy3005"."visit" AS "visit" WHERE "visit"."visit_date_actl" IS NOT NULL AND ("visit"."visit_type" = CAST('IWRS Signant' AS TEXT))) AS "derived_table48" PIVOT (MIN("derived_table48"."visit_date_actl") FOR "derived_table48"."visit_name" IN (CAST('DATE RANDOMIZED' AS VARCHAR) AS "DATE RANDOMIZED", CAST('DATE SCREENED' AS VARCHAR) AS "DATE SCREENED", CAST('DATE SCREEN FAILED' AS VARCHAR) AS "DATE SCREEN FAILED")) AS "unnamed_pivot49" GROUP BY "unnamed_pivot49"."subject_id", "unnamed_pivot49"."date randomized", "unnamed_pivot49"."date screened", "unnamed_pivot49"."date screen failed") AS "d1" ON "ss"."subject_id" = "d1"."subject_id") LEFT JOIN (SELECT "visit_1"."subject_id" AS "subject_id", "visit_1"."visit_date_actl" AS "discontinuation_date" FROM "orbit_68284528mmy3005"."visit" AS "visit_1" WHERE (("visit_1"."visit_type" = CAST('IWRS Signant' AS TEXT)) AND ("visit_1"."visit_name" LIKE CAST('DATE DISCONTINUED%' AS TEXT))) AND "visit_1"."visit_date_actl" IS NOT NULL) AS "d2" ON "ss"."subject_id" = "d2"."subject_id") INNER JOIN (SELECT "collection_schedule"."arm" AS "arm", "collection_schedule"."visit_name" AS "visit_name", "collection_schedule"."visit_window" AS "visit_window", "collection_schedule"."assessment" AS "assessment", "collection_schedule"."specimen_visit_id" AS "specimen_visit_id", "collection_schedule"."specimen_class" AS "specimen_class", "collection_schedule"."receiving_lab" AS "receiving_lab", "collection_schedule"."testing_lab" AS "testing_lab", "collection_schedule"."expected_temp" AS "expected_temp", "collection_schedule"."protocol_version" AS "protocol_version", CASE WHEN ("collection_schedule"."specimen_visit_id" LIKE CAST('AC%' AS TEXT)) THEN REGEXP_REPLACE("collection_schedule"."specimen_visit_id", CAST('AC' AS TEXT), CAST('C' AS TEXT)) WHEN ("collection_schedule"."specimen_visit_id" LIKE CAST('BC%' AS TEXT)) THEN REGEXP_REPLACE("collection_schedule"."specimen_visit_id", CAST('BC' AS TEXT), CAST('C' AS TEXT)) ELSE "collection_schedule"."specimen_visit_id" END AS "pvc_match" FROM "orbit_68284528mmy3005"."collection_schedule" AS "collection_schedule") AS "cs" ON CAST(TRUE AS BOOL)) LEFT JOIN ((SELECT "visit_2"."subject_id" AS "subject_id", "visit_2"."visit_name" AS "visit_name", "visit_2"."visit_oid" AS "visit_oid", "visit_2"."visit_date_exp" AS "visit_date_exp", "visit_2"."visit_date_actl" AS "visit_date_actl" FROM "orbit_68284528mmy3005"."visit" AS "visit_2") UNION (SELECT DISTINCT "subject_test_response"."subject_id" AS "subject_id", "subject_test_response"."subject_test_value" AS "visit_name", "subject_test_response"."subject_test_value" AS "visit_oid", CAST(NULL AS DATE) AS "visit_date_exp", MIN(CAST("subject_test_response"."subject_test_date" AS DATE)) OVER (PARTITION BY "subject_test_response"."subject_id", "subject_test_response"."subject_test_value" ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS "visit_date_actl" FROM "orbit_68284528mmy3005_outcome"."subject_test_response" AS "subject_test_response" WHERE (("subject_test_response"."subject_test_name" = CAST('Disease Response' AS TEXT)) AND ("subject_test_response"."subject_test_category" = CAST('IMWG CRITERIA' AS TEXT))) AND ((("subject_test_response"."subject_test_value" = CAST('sCR' AS TEXT)) OR ("subject_test_response"."subject_test_value" = CAST('CR' AS TEXT))) OR ("subject_test_response"."subject_test_value" = CAST('PD' AS TEXT))))) AS "v"("subject_id", "visit_name", "visit_oid", "visit_date_exp", "visit_date_actl") ON ("ss"."subject_id" = "v"."subject_id") AND ("cs"."visit_name" = "v"."visit_name")) LEFT JOIN (SELECT "s_1"."specimen_id" AS "specimen_id", "s_1"."accession_number" AS "accession_number", "s_1"."study_subject" AS "study_subject", "s_1"."study_id" AS "study_id", "s_1"."subject_id" AS "subject_id", "s_1"."pre_screening_id" AS "pre_screening_id", "s_1"."visit_id" AS "visit_id", "s_1"."vendor_id" AS "vendor_id", "s_1"."specimen_class" AS "specimen_class", "s_1"."specimen_type" AS "specimen_type", "s_1"."storage_location" AS "storage_location", "s_1"."storage_state" AS "storage_state", "s_1"."storage_temperature" AS "storage_temperature", "s_1"."vendor_specimen_id" AS "vendor_specimen_id", "s_1"."vendor_subject_id" AS "vendor_subject_id", "s_1"."vendor_study_id" AS "vendor_study_id", "s_1"."site_specimen_id" AS "site_specimen_id", "s_1"."specimen_condition" AS "specimen_condition", "s_1"."specimen_extract_location" AS "specimen_extract_location", "s_1"."specimen_collection_date" AS "specimen_collection_date", "s_1"."specimen_received_date" AS "specimen_received_date", "s_1"."vendor_specimen_type" AS "vendor_specimen_type", "s_1"."specimen_status" AS "specimen_status", "s_1"."specimen_accession_date" AS "specimen_accession_date", "s_1"."specimen_reporting_date" AS "specimen_reporting_date", "s_1"."repeat_status" AS "repeat_status", "s_1"."repeat_times" AS "repeat_times", "s_1"."number_of_slides" AS "number_of_slides", "s_1"."number_of_slides_needed" AS "number_of_slides_needed", "s_1"."reason_qualified_or_failed" AS "reason_qualified_or_failed", "s_1"."sample_pass_fail_status" AS "sample_pass_fail_status", "s_1"."run_id" AS "run_id", "s_1"."composite_primary_key" AS "composite_primary_key", "s_1"."row_id" AS "row_id", "st_sm"."inferred_sm" AS "inferred_sm", CASE WHEN ("s_1"."visit_id" LIKE CAST('%CC%D%' AS TEXT)) THEN SPLIT_PART(LTRIM(SPLIT_PART("s_1"."visit_id", CAST('CC' AS TEXT), CAST(2 AS INT4)), CAST('0' AS TEXT)), CAST('D' AS TEXT), CAST(1 AS INT4)) WHEN ("s_1"."visit_id" LIKE CAST('%C%D%' AS TEXT)) THEN SPLIT_PART(LTRIM(SPLIT_PART("s_1"."visit_id", CAST('C' AS TEXT), CAST(2 AS INT4)), CAST('0' AS TEXT)), CAST('D' AS TEXT), CAST(1 AS INT4)) ELSE CAST(NULL AS TEXT) END AS "cycle", CASE WHEN ("s_1"."visit_id" LIKE CAST('%C%D%' AS TEXT)) THEN LTRIM(SPLIT_PART("s_1"."visit_id", CAST('D' AS TEXT), CAST(2 AS INT4)), CAST('0' AS TEXT)) ELSE CAST(NULL AS TEXT) END AS "day", CONCAT(CAST('C' AS TEXT), CONCAT(CASE WHEN ("s_1"."visit_id" LIKE CAST('%CC%D%' AS TEXT)) THEN SPLIT_PART(LTRIM(SPLIT_PART("s_1"."visit_id", CAST('CC' AS TEXT), CAST(2 AS INT4)), CAST('0' AS TEXT)), CAST('D' AS TEXT), CAST(1 AS INT4)) WHEN ("s_1"."visit_id" LIKE CAST('%C%D%' AS TEXT)) THEN SPLIT_PART(LTRIM(SPLIT_PART("s_1"."visit_id", CAST('C' AS TEXT), CAST(2 AS INT4)), CAST('0' AS TEXT)), CAST('D' AS TEXT), CAST(1 AS INT4)) ELSE CAST(NULL AS TEXT) END, CONCAT(CAST('D' AS TEXT), CASE WHEN ("s_1"."visit_id" LIKE CAST('%C%D%' AS TEXT)) THEN LTRIM(SPLIT_PART("s_1"."visit_id", CAST('D' AS TEXT), CAST(2 AS INT4)), CAST('0' AS TEXT)) ELSE CAST(NULL AS TEXT) END))) AS "visit_clean", CASE WHEN ("s_1"."vendor_id" = CAST(21 AS INT4)) THEN SPLIT_PART("s_1"."visit_id", CAST('|' AS TEXT), CAST(2 AS INT4)) WHEN ("s_1"."vendor_id" = CAST(3 AS INT4)) THEN COALESCE(CONCAT(CAST('C' AS TEXT), CONCAT(CASE WHEN ("s_1"."visit_id" LIKE CAST('%CC%D%' AS TEXT)) THEN SPLIT_PART(LTRIM(SPLIT_PART("s_1"."visit_id", CAST('CC' AS TEXT), CAST(2 AS INT4)), CAST('0' AS TEXT)), CAST('D' AS TEXT), CAST(1 AS INT4)) WHEN ("s_1"."visit_id" LIKE CAST('%C%D%' AS TEXT)) THEN SPLIT_PART(LTRIM(SPLIT_PART("s_1"."visit_id", CAST('C' AS TEXT), CAST(2 AS INT4)), CAST('0' AS TEXT)), CAST('D' AS TEXT), CAST(1 AS INT4)) ELSE CAST(NULL AS TEXT) END, CONCAT(CAST('D' AS TEXT), CASE WHEN ("s_1"."visit_id" LIKE CAST('%C%D%' AS TEXT)) THEN LTRIM(SPLIT_PART("s_1"."visit_id", CAST('D' AS TEXT), CAST(2 AS INT4)), CAST('0' AS TEXT)) ELSE CAST(NULL AS TEXT) END))), "s_1"."visit_id") WHEN ((("s_1"."vendor_id" = CAST(5 AS INT4)) AND ("s_1"."specimen_type" = CAST('BMA' AS TEXT))) AND (("s_1"."visit_id" = CAST('Post Infusion D21' AS TEXT)) OR ("s_1"."visit_id" = CAST('Post Infusion D28' AS TEXT)))) THEN CAST('Post Infusion D21, Post Infusion D28' AS VARCHAR) WHEN ("s_1"."visit_id" LIKE CAST('COND%' AS TEXT)) THEN CAST('COND' AS VARCHAR) WHEN (LOWER("s_1"."visit_id") LIKE CAST('%uns%' AS TEXT)) THEN CAST('UNSCHEDULED' AS VARCHAR) ELSE "s_1"."visit_id" END AS "sp_visit_id_match", CASE WHEN ("s_1"."vendor_id" = CAST(3 AS INT4)) THEN pg_catalog.SUBSTRING(COALESCE("s_1"."vendor_specimen_type", "st_sm"."inferred_sm"), CAST(1 AS INT4), CAST(4 AS INT4)) WHEN ("s_1"."vendor_id" = CAST(5 AS INT4)) THEN "s_1"."specimen_type" ELSE "s_1"."specimen_class" END AS "vend_spec_type" FROM "orbit_68284528mmy3005"."specimen" AS "s_1" LEFT JOIN (SELECT "specimen_test"."specimen_id" AS "specimen_id", "specimen_test"."test_code" AS "test_code", CASE WHEN ("specimen_test"."test_code" = CAST('SCT2447' AS TEXT)) THEN CAST('SM01' AS TEXT) WHEN ("specimen_test"."test_code" = CAST('SCT3618' AS TEXT)) THEN CAST('SM02' AS TEXT) WHEN ("specimen_test"."test_code" = CAST('SCT4108' AS TEXT)) THEN CAST('SM03' AS TEXT) WHEN ("specimen_test"."test_code" = CAST('RCT4559' AS TEXT)) THEN CAST('SM04' AS TEXT) WHEN ("specimen_test"."test_code" = CAST('X0014-SE' AS TEXT)) THEN CAST('SM08' AS TEXT) WHEN ("specimen_test"."test_code" = CAST('XXXX' AS TEXT)) THEN CAST('SM09' AS TEXT) ELSE CAST(NULL AS TEXT) END AS "inferred_sm" FROM "orbit_68284528mmy3005"."specimen_test" AS "specimen_test" WHERE (((("specimen_test"."test_code" = CAST('SCT2447' AS TEXT)) OR ("specimen_test"."test_code" = CAST('SCT3618' AS TEXT))) OR ("specimen_test"."test_code" = CAST('SCT4108' AS TEXT))) OR ("specimen_test"."test_code" = CAST('RCT4559' AS TEXT))) OR ("specimen_test"."test_code" = CAST('X0014-SE' AS TEXT))) AS "st_sm" ON "s_1"."specimen_id" = "st_sm"."specimen_id") AS "sp" ON (("ss"."subject_id" = "sp"."subject_id") AND ((("cs"."pvc_match" <> CAST('DISEASE EVALUATION IGD OR IGE' AS TEXT)) AND ("cs"."pvc_match" = "sp"."sp_visit_id_match")) OR (("cs"."pvc_match" = CAST('DISEASE EVALUATION IGD OR IGE' AS TEXT)) AND (("sp"."specimen_collection_date" >= ("v"."visit_date_actl" - CAST('3 days' AS INTERVAL))) AND ("sp"."specimen_collection_date" <= ("v"."visit_date_actl" + CAST('3 days' AS INTERVAL))))))) AND (("cs"."specimen_class" IS NOT NULL AND ("cs"."specimen_class" = "sp"."vend_spec_type")) OR "cs"."specimen_class" IS NULL)) LEFT JOIN (SELECT DISTINCT "collection_schedule_1"."assessment" AS "assessment", "collection_schedule_1"."receiving_lab" AS "receiving_lab", "collection_schedule_1"."specimen_class" AS "specimen_class", "collection_schedule_1"."specimen_visit_id" AS "specimen_visit_id" FROM "orbit_68284528mmy3005"."collection_schedule" AS "collection_schedule_1") AS "cs2" ON "sp"."vend_spec_type" = "cs2"."specimen_class") LEFT JOIN "orbit_68284528mmy3005"."study_site" AS "sst" ON ("ss"."site_id" = "sst"."site_id") AND ("ss"."study_id" = "sst"."study_id")) LEFT JOIN "orbit_68284528mmy3005"."site" AS "s" ON (("ss"."site_id" = "s"."site_id") AND ("ss"."study_id" = "s"."study_id")) AND ("sst"."site_country" = "s"."site_country_code")) LEFT JOIN (SELECT DISTINCT "specimen"."subject_id" AS "subject_id", "specimen"."visit_id" AS "visit_id", "specimen"."specimen_collection_date" AS "specimen_collection_date" FROM "orbit_68284528mmy3005"."specimen" AS "specimen") AS "sv" ON ("cs"."specimen_visit_id" = "sv"."visit_id") AND ("v"."subject_id" = "sv"."subject_id")) LEFT JOIN (SELECT "specimen_test_1"."specimen_id" AS "specimen_id", "specimen_test_1"."test_result_orig_value" AS "open_dcf" FROM "orbit_68284528mmy3005"."specimen_test" AS "specimen_test_1" WHERE ("specimen_test_1"."vendor_id" = CAST(5 AS INT4)) AND ("specimen_test_1"."test_name" = CAST('OpenDcf' AS TEXT))) AS "st1" ON "sp"."specimen_id" = "st1"."specimen_id") LEFT JOIN (SELECT DISTINCT COALESCE("s_2"."subject_id", "s_2"."vendor_subject_id") AS "subject_id", "s_2"."visit_id" AS "visit_id", LISTAGG("st"."test_result_orig_value", CAST('; ' AS TEXT)) AS "all_ig_status", MIN("st"."test_result_date") AS "ig_test_date", CASE WHEN ((LISTAGG("st"."test_result_orig_value", CAST('; ' AS TEXT)) LIKE CAST('%IgE%' AS TEXT)) AND (LISTAGG("st"."test_result_orig_value", CAST('; ' AS TEXT)) LIKE CAST('%IgD%' AS TEXT))) THEN CAST('IgE Positive & IgD Positive' AS TEXT) WHEN ((LISTAGG("st"."test_result_orig_value", CAST('; ' AS TEXT)) LIKE CAST('%IgE%' AS TEXT)) AND (LISTAGG("st"."test_result_orig_value", CAST('; ' AS TEXT)) LIKE CAST('%IgD%' AS TEXT))) THEN CAST('IgE Positive & IgD Positive' AS TEXT) WHEN (LISTAGG("st"."test_result_orig_value", CAST('; ' AS TEXT)) LIKE CAST('%IgE%' AS TEXT)) THEN CAST('IgE Positive' AS TEXT) WHEN (LISTAGG("st"."test_result_orig_value", CAST('; ' AS TEXT)) LIKE CAST('%IgD%' AS TEXT)) THEN CAST('IgD Positive' AS TEXT) WHEN LISTAGG("st"."test_result_orig_value", CAST('; ' AS TEXT)) IS NULL THEN CAST(NULL AS TEXT) ELSE CAST('Negative' AS TEXT) END AS "igd_ige_status" FROM (SELECT "specimen_1"."specimen_id" AS "specimen_id", "specimen_1"."subject_id" AS "subject_id", "specimen_1"."vendor_subject_id" AS "vendor_subject_id", "specimen_1"."visit_id" AS "visit_id" FROM "orbit_68284528mmy3005"."specimen" AS "specimen_1" WHERE "specimen_1"."visit_id" = CAST('SCRN' AS TEXT)) AS "s_2" LEFT JOIN (SELECT "specimen_test_2"."specimen_id" AS "specimen_id", "specimen_test_2"."test_code" AS "test_code", "specimen_test_2"."test_result_orig_value" AS "test_result_orig_value", "specimen_test_2"."test_result_date" AS "test_result_date" FROM "orbit_68284528mmy3005"."specimen_test" AS "specimen_test_2" WHERE (("specimen_test_2"."test_code" = CAST('SCT2466' AS TEXT)) OR ("specimen_test_2"."test_code" = CAST('SCT2467' AS TEXT))) OR ("specimen_test_2"."test_code" = CAST('SCT2468' AS TEXT))) AS "st" ON "s_2"."specimen_id" = "st"."specimen_id" GROUP BY "s_2"."subject_id", "s_2"."vendor_subject_id", "s_2"."visit_id") AS "st2" ON "ss"."subject_id" = "st2"."subject_id") LEFT JOIN (SELECT "specimen_test_3"."specimen_id" AS "specimen_id", "specimen_test_3"."test_name" AS "test_name", "specimen_test_3"."test_code" AS "test_code", "specimen_test_3"."test_result_date" AS "test_result_date", "specimen_test_3"."test_result_orig_value" AS "test_result_orig_value", "specimen_test_3"."test_result_orig_value_cancelled" AS "test_result_orig_value_cancelled", CASE WHEN ("specimen_test_3"."test_code" = CAST('SCT2447' AS TEXT)) THEN CAST('SPEP/SIFE (SCT2447)' AS TEXT) WHEN ("specimen_test_3"."test_code" = CAST('SCT3618' AS TEXT)) THEN CAST('UPEP (24-hour urine)/UIFE (SCT3618)' AS TEXT) WHEN ("specimen_test_3"."test_code" = CAST('SCT4108' AS TEXT)) THEN CAST('Serum FLC (SCT4108)' AS TEXT) WHEN ("specimen_test_3"."test_code" = CAST('RCT4559' AS TEXT)) THEN CAST('Serum quantitative Igs (RCT4559)' AS TEXT) WHEN ("specimen_test_3"."test_code" = CAST('X0014-SE' AS TEXT)) THEN CAST('Cytokine profiling (serum) (X0014-SE)' AS TEXT) ELSE CAST(NULL AS TEXT) END AS "assessment_test", CASE WHEN "specimen_test_3"."test_result_orig_value" IS NOT NULL THEN CAST('Done' AS TEXT) WHEN ("specimen_test_3"."test_result_orig_value" IS NULL OR "specimen_test_3"."test_result_orig_value_cancelled" IS NOT NULL) THEN CAST('Not Done' AS TEXT) ELSE CAST(NULL AS TEXT) END AS "assessment_completed" FROM "orbit_68284528mmy3005"."specimen_test" AS "specimen_test_3" WHERE (((("specimen_test_3"."test_code" = CAST('SCT2447' AS TEXT)) OR ("specimen_test_3"."test_code" = CAST('SCT3618' AS TEXT))) OR ("specimen_test_3"."test_code" = CAST('SCT4108' AS TEXT))) OR ("specimen_test_3"."test_code" = CAST('RCT4559' AS TEXT))) OR ("specimen_test_3"."test_code" = CAST('X0014-SE' AS TEXT))) AS "st3" ON "sp"."specimen_id" = "st3"."specimen_id") LEFT JOIN (SELECT pg_catalog.LEFT("specimen_test_4"."specimen_id", CAST(10 AS INT4)) AS "accession_number", "specimen_test_4"."test_result_orig_value" AS "collection_criteria" FROM "orbit_68284528mmy3005"."specimen_test" AS "specimen_test_4" WHERE "specimen_test_4"."test_code" = CAST('AMT13129' AS TEXT)) AS "st4" ON "sp"."accession_number" = "st4"."accession_number") LEFT JOIN (SELECT "specimen_2"."specimen_id" AS "specimen_id", SPLIT_PART(SPLIT_PART("specimen_2"."storage_temperature", CAST('Expected Temperature: ' AS TEXT), CAST(2 AS INT4)), CAST('|' AS TEXT), CAST(1 AS INT4)) AS "cerba_expected_temp", SPLIT_PART("specimen_2"."storage_temperature", CAST('Reception Temperature: ' AS TEXT), CAST(2 AS INT4)) AS "cerba_actual_temp" FROM "orbit_68284528mmy3005"."specimen" AS "specimen_2" WHERE "specimen_2"."vendor_id" = CAST(5 AS INT4)) AS "st5" ON "sp"."specimen_id" = "st5"."specimen_id") LEFT JOIN (SELECT "specimen_test_5"."specimen_id" AS "specimen_id", CASE WHEN "specimen_test_5"."test_status" IS NULL THEN CAST('CLONE ID ESTABLISHED' AS VARCHAR) ELSE "specimen_test_5"."test_status" END AS "mrd_clone_status", "specimen_test_5"."basline_flag" AS "mrd_baseline" FROM "orbit_68284528mmy3005"."specimen_test" AS "specimen_test_5" WHERE "specimen_test_5"."test_code" = CAST('CLONEFRQ' AS TEXT)) AS "st6" ON "sp"."specimen_id" = "st6"."specimen_id" WHERE ((("ss"."arm" = "cs"."arm") AND "ss"."arm" IS NOT NULL) OR ("cs"."visit_name" = CAST('SCREENING' AS TEXT))) OR ((("cs"."specimen_visit_id" = CAST('UNSCHEDULED' AS TEXT)) OR ("cs"."specimen_visit_id" = CAST('MMRETEST' AS TEXT))) AND (ROW("sp"."vend_spec_type") = ANY (SELECT "collection_schedule_2"."specimen_class" AS "specimen_class" FROM "orbit_68284528mmy3005"."collection_schedule" AS "collection_schedule_2"))) ORDER BY "ss"."subject_id" ASC NULLS LAST, "sp"."specimen_collection_date" ASC NULLS LAST, "v"."visit_date_actl" ASC NULLS LAST, "v"."visit_date_exp" ASC NULLS LAST) AS "cd" LEFT JOIN (SELECT "cm"."subject_id" AS "subject_id", "cm"."grp" AS "grp", SUM(CASE WHEN ("cm"."missed_all_collections" = CAST(1 AS INT4)) THEN CAST(1 AS INT4) ELSE CAST(0 AS INT4) END) AS "missed_count" FROM (SELECT DISTINCT "collection_data"."subject_id" AS "subject_id", "collection_data"."exp_visit" AS "exp_visit", "collection_data"."visit_date_actl" AS "visit_date_actl", "collection_data"."missed_all_collections" AS "missed_all_collections", (ROW_NUMBER() OVER (PARTITION BY "collection_data"."subject_id" ORDER BY "collection_data"."visit_date_actl" ASC NULLS LAST) - ROW_NUMBER() OVER (PARTITION BY "collection_data"."subject_id", "collection_data"."missed_all_collections" ORDER BY "collection_data"."visit_date_actl" ASC NULLS LAST)) AS "grp" FROM (SELECT DISTINCT "ss_1"."subject_id" AS "subject_id", "ss_1"."site_id" AS "site_id", "s_3"."site_country_name" AS "site_country_name", "ss_1"."study_subject_status" AS "study_subject_status", "ss_1"."cohort" AS "cohort", "ss_1"."cohort" AS "treatment_arm", "ss_1"."arm" AS "study_arm", "d1_1"."screening_date" AS "screening_date", "d1_1"."screen_failed_date" AS "screen_failed_date", "d1_1"."randomization_date" AS "randomization_date", "d2_1"."discontinuation_date" AS "discontinuation_date", CAST(NULL AS TEXT) AS "date_enrollment", "v_1"."visit_date_exp" AS "visit_date_exp", REGEXP_REPLACE("cs_1"."visit_window", CAST('[^0-9]' AS TEXT), CAST('' AS TEXT)) AS "visit_window_days", CASE WHEN ("cs_1"."visit_window" LIKE CAST('%-%' AS TEXT)) THEN ("v_1"."visit_date_exp" - CAST(REGEXP_REPLACE("cs_1"."visit_window", CAST('[^0-9]' AS TEXT), CAST('' AS TEXT)) AS INT4)) ELSE "v_1"."visit_date_exp" END AS "exp_visit_window_min", CASE WHEN ("cs_1"."visit_window" LIKE CAST('%+%' AS TEXT)) THEN ("v_1"."visit_date_exp" + CAST(REGEXP_REPLACE("cs_1"."visit_window", CAST('[^0-9]' AS TEXT), CAST('' AS TEXT)) AS INT4)) ELSE "v_1"."visit_date_exp" END AS "exp_visit_window_max", "v_1"."visit_date_actl" AS "visit_date_actl", "v_1"."visit_name" AS "visit_name", "sp_1"."visit_id" AS "sp_visit_id", "sp_1"."specimen_collection_date" AS "specimen_collection_date", COALESCE("v_1"."visit_date_actl", "sp_1"."specimen_collection_date") AS "coal_visit_collection_dates", COALESCE("cs_1"."visit_name", "cs_1"."specimen_visit_id") AS "exp_visit", COALESCE("cs_1"."assessment", "cs2_1"."assessment") AS "assessment", COALESCE("cs_1"."receiving_lab", "cs2_1"."receiving_lab") AS "receiving_lab", COALESCE("cs_1"."specimen_class", "cs2_1"."specimen_class") AS "exp_specimen_class", CONCAT(CONCAT("cs_1"."specimen_visit_id", CAST('_' AS TEXT)), COALESCE("cs_1"."specimen_class", "cs2_1"."specimen_class")) AS "scheduled_collection", CASE WHEN ((COALESCE("cs_1"."receiving_lab", "cs2_1"."receiving_lab") = CAST('Cerba' AS TEXT)) OR (COALESCE("cs_1"."assessment", "cs2_1"."assessment") = CAST('MRD' AS TEXT))) THEN CAST('Biomarker' AS TEXT) ELSE CAST('Disease Evaluation' AS TEXT) END AS "assessment_group", "sp_1"."specimen_class" AS "specimen_class", "sp_1"."specimen_type" AS "specimen_type", "sp_1"."accession_number" AS "accession_number", "sp_1"."specimen_id" AS "specimen_id", "sp_1"."specimen_received_date" AS "specimen_received_date", "sp_1"."specimen_accession_date" AS "specimen_accession_date", COALESCE(REGEXP_REPLACE("st5_1"."cerba_expected_temp", CAST(' °C' AS TEXT), CAST('C' AS TEXT)), "cs_1"."expected_temp") AS "expected_temp", COALESCE("sp_1"."specimen_condition", "st4_1"."collection_criteria", REGEXP_REPLACE("st5_1"."cerba_actual_temp", CAST(' °C' AS TEXT), CAST('C' AS TEXT))) AS "actual_specimen_condition", CASE WHEN (("sp_1"."vendor_id" = CAST(21 AS INT4)) AND (UPPER("cs_1"."expected_temp") <> UPPER(COALESCE("sp_1"."specimen_condition", "st4_1"."collection_criteria", REGEXP_REPLACE("st5_1"."cerba_actual_temp", CAST(' °C' AS TEXT), CAST('C' AS TEXT)))))) THEN CAST('Flag' AS TEXT) WHEN (((("sp_1"."vendor_id" = CAST(5 AS INT4)) AND ("cs_1"."expected_temp" <> CAST('' AS TEXT))) AND (COALESCE("sp_1"."specimen_condition", "st4_1"."collection_criteria", REGEXP_REPLACE("st5_1"."cerba_actual_temp", CAST(' °C' AS TEXT), CAST('C' AS TEXT))) <> CAST('' AS TEXT))) AND ("cs_1"."expected_temp" <> COALESCE("sp_1"."specimen_condition", "st4_1"."collection_criteria", REGEXP_REPLACE("st5_1"."cerba_actual_temp", CAST(' °C' AS TEXT), CAST('C' AS TEXT))))) THEN CAST('Flag' AS TEXT) WHEN ((("sp_1"."vendor_id" = CAST(3 AS INT4)) AND (LOWER(COALESCE("sp_1"."specimen_condition", "st4_1"."collection_criteria", REGEXP_REPLACE("st5_1"."cerba_actual_temp", CAST(' °C' AS TEXT), CAST('C' AS TEXT)))) LIKE CAST('%received at ambient temperature%' AS TEXT))) OR ((LOWER(COALESCE("sp_1"."specimen_condition", "st4_1"."collection_criteria", REGEXP_REPLACE("st5_1"."cerba_actual_temp", CAST(' °C' AS TEXT), CAST('C' AS TEXT)))) = CAST('no' AS TEXT)) OR (LOWER(COALESCE("sp_1"."specimen_condition", "st4_1"."collection_criteria", REGEXP_REPLACE("st5_1"."cerba_actual_temp", CAST(' °C' AS TEXT), CAST('C' AS TEXT)))) = CAST('collection unacceptable' AS TEXT)))) THEN CAST('Flag' AS TEXT) ELSE CAST(NULL AS TEXT) END AS "condition_flag", CASE WHEN ("sp_1"."vendor_id" = CAST(5 AS INT4)) THEN "st1_1"."open_dcf" WHEN ("sp_1"."vendor_id" = CAST(21 AS INT4)) THEN SPLIT_PART("sp_1"."specimen_status", CAST('|' AS TEXT), CAST(2 AS INT4)) ELSE CAST(NULL AS VARCHAR) END AS "sample_query", "st2_1"."igd_ige_status" AS "igd_ige_status", "st2_1"."ig_test_date" AS "ig_test_date", "st3_1"."assessment_test" AS "assessment_test", "st3_1"."assessment_completed" AS "assessment_completed", "st3_1"."test_result_date" AS "test_result_date", "st6_1"."mrd_clone_status" AS "mrd_clone_status", "st6_1"."mrd_baseline" AS "mrd_baseline", CASE WHEN ("sp_1"."vendor_id" = CAST(21 AS INT4)) THEN SPLIT_PART("sp_1"."specimen_status", CAST('|' AS TEXT), CAST(1 AS INT4)) ELSE "sp_1"."specimen_status" END AS "specimen_status", COALESCE("v_1"."visit_date_actl", "sp_1"."specimen_collection_date") AS "past_visit_date", CASE WHEN ("sp_1"."specimen_collection_date" IS NOT NULL OR "sp_1"."specimen_id" IS NOT NULL) THEN CAST('Collected' AS TEXT) WHEN (((COALESCE("v_1"."visit_date_actl", "sp_1"."specimen_collection_date") IS NULL AND ((CASE WHEN ("cs_1"."visit_window" LIKE CAST('%+%' AS TEXT)) THEN ("v_1"."visit_date_exp" + CAST(REGEXP_REPLACE("cs_1"."visit_window", CAST('[^0-9]' AS TEXT), CAST('' AS TEXT)) AS INT4)) ELSE "v_1"."visit_date_exp" END + CAST(7 AS INT4)) >= GETDATE())) AND ("ss_1"."study_subject_status" <> CAST('Early Terminated' AS TEXT))) AND ("ss_1"."study_subject_status" <> CAST('Screen Failed' AS TEXT))) THEN CAST('Future Collection' AS TEXT) WHEN ((COALESCE("v_1"."visit_date_actl", "sp_1"."specimen_collection_date") IS NULL AND "v_1"."visit_date_exp" IS NULL) AND ((("ss_1"."study_subject_status" <> CAST('Screening' AS TEXT)) AND ("ss_1"."study_subject_status" <> CAST('Early Terminated' AS TEXT))) AND ("ss_1"."study_subject_status" <> CAST('Screen Failed' AS TEXT)))) THEN CAST('Future Collection' AS TEXT) WHEN (COALESCE("v_1"."visit_date_actl", "sp_1"."specimen_collection_date") IS NOT NULL AND (GETDATE() <= (CASE WHEN ("cs_1"."visit_window" LIKE CAST('%+%' AS TEXT)) THEN ("v_1"."visit_date_exp" + CAST(REGEXP_REPLACE("cs_1"."visit_window", CAST('[^0-9]' AS TEXT), CAST('' AS TEXT)) AS INT4)) ELSE "v_1"."visit_date_exp" END + CAST(7 AS INT4)))) THEN CAST('Pending' AS TEXT) WHEN (("sp_1"."specimen_collection_date" IS NULL AND COALESCE("v_1"."visit_date_actl", "sp_1"."specimen_collection_date") IS NOT NULL) AND (GETDATE() > (COALESCE("v_1"."visit_date_actl", "sp_1"."specimen_collection_date") + CAST(7 AS INT4)))) THEN CAST('Missed Collection' AS TEXT) WHEN ((COALESCE("v_1"."visit_date_actl", "sp_1"."specimen_collection_date") IS NULL AND ("ss_1"."study_subject_status" = CAST('Early Terminated' AS TEXT))) AND (("v_1"."visit_date_exp" >= "ss_1"."date_termination") OR "v_1"."visit_date_exp" IS NULL)) THEN CAST('Not Expected' AS TEXT) ELSE CAST(NULL AS TEXT) END AS "collection_status", CASE WHEN ((("cs_1"."visit_name" <> CAST('SCREENING' AS TEXT)) AND ("cs_1"."assessment" = CAST('Serum quantitative IgD/IgE' AS TEXT))) AND ("st2_1"."igd_ige_status" NOT LIKE CAST('%Positive%' AS TEXT))) THEN CAST('Yes' AS TEXT) ELSE CAST('No' AS TEXT) END AS "optional", CAST(NULL AS TEXT) AS "protocol_version", CAST(1 AS INT4) AS "expected_collection", CASE WHEN (CASE WHEN ("sp_1"."specimen_collection_date" IS NOT NULL OR "sp_1"."specimen_id" IS NOT NULL) THEN CAST('Collected' AS TEXT) WHEN (((COALESCE("v_1"."visit_date_actl", "sp_1"."specimen_collection_date") IS NULL AND ((CASE WHEN ("cs_1"."visit_window" LIKE CAST('%+%' AS TEXT)) THEN ("v_1"."visit_date_exp" + CAST(REGEXP_REPLACE("cs_1"."visit_window", CAST('[^0-9]' AS TEXT), CAST('' AS TEXT)) AS INT4)) ELSE "v_1"."visit_date_exp" END + CAST(7 AS INT4)) >= GETDATE())) AND ("ss_1"."study_subject_status" <> CAST('Early Terminated' AS TEXT))) AND ("ss_1"."study_subject_status" <> CAST('Screen Failed' AS TEXT))) THEN CAST('Future Collection' AS TEXT) WHEN ((COALESCE("v_1"."visit_date_actl", "sp_1"."specimen_collection_date") IS NULL AND "v_1"."visit_date_exp" IS NULL) AND ((("ss_1"."study_subject_status" <> CAST('Screening' AS TEXT)) AND ("ss_1"."study_subject_status" <> CAST('Early Terminated' AS TEXT))) AND ("ss_1"."study_subject_status" <> CAST('Screen Failed' AS TEXT)))) THEN CAST('Future Collection' AS TEXT) WHEN (COALESCE("v_1"."visit_date_actl", "sp_1"."specimen_collection_date") IS NOT NULL AND (GETDATE() <= (CASE WHEN ("cs_1"."visit_window" LIKE CAST('%+%' AS TEXT)) THEN ("v_1"."visit_date_exp" + CAST(REGEXP_REPLACE("cs_1"."visit_window", CAST('[^0-9]' AS TEXT), CAST('' AS TEXT)) AS INT4)) ELSE "v_1"."visit_date_exp" END + CAST(7 AS INT4)))) THEN CAST('Pending' AS TEXT) WHEN (("sp_1"."specimen_collection_date" IS NULL AND COALESCE("v_1"."visit_date_actl", "sp_1"."specimen_collection_date") IS NOT NULL) AND (GETDATE() > (COALESCE("v_1"."visit_date_actl", "sp_1"."specimen_collection_date") + CAST(7 AS INT4)))) THEN CAST('Missed Collection' AS TEXT) WHEN ((COALESCE("v_1"."visit_date_actl", "sp_1"."specimen_collection_date") IS NULL AND ("ss_1"."study_subject_status" = CAST('Early Terminated' AS TEXT))) AND (("v_1"."visit_date_exp" >= "ss_1"."date_termination") OR "v_1"."visit_date_exp" IS NULL)) THEN CAST('Not Expected' AS TEXT) ELSE CAST(NULL AS TEXT) END = CAST('Missed Collection' AS TEXT)) THEN CAST(1 AS INT4) ELSE CAST(0 AS INT4) END AS "missed_collection_binary", SUM(CAST(1 AS INT4)) OVER (PARTITION BY "ss_1"."subject_id", COALESCE("cs_1"."visit_name", "cs_1"."specimen_visit_id") ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS "total_visit_collections", SUM(CASE WHEN (CASE WHEN ("sp_1"."specimen_collection_date" IS NOT NULL OR "sp_1"."specimen_id" IS NOT NULL) THEN CAST('Collected' AS TEXT) WHEN (((COALESCE("v_1"."visit_date_actl", "sp_1"."specimen_collection_date") IS NULL AND ((CASE WHEN ("cs_1"."visit_window" LIKE CAST('%+%' AS TEXT)) THEN ("v_1"."visit_date_exp" + CAST(REGEXP_REPLACE("cs_1"."visit_window", CAST('[^0-9]' AS TEXT), CAST('' AS TEXT)) AS INT4)) ELSE "v_1"."visit_date_exp" END + CAST(7 AS INT4)) >= GETDATE())) AND ("ss_1"."study_subject_status" <> CAST('Early Terminated' AS TEXT))) AND ("ss_1"."study_subject_status" <> CAST('Screen Failed' AS TEXT))) THEN CAST('Future Collection' AS TEXT) WHEN ((COALESCE("v_1"."visit_date_actl", "sp_1"."specimen_collection_date") IS NULL AND "v_1"."visit_date_exp" IS NULL) AND ((("ss_1"."study_subject_status" <> CAST('Screening' AS TEXT)) AND ("ss_1"."study_subject_status" <> CAST('Early Terminated' AS TEXT))) AND ("ss_1"."study_subject_status" <> CAST('Screen Failed' AS TEXT)))) THEN CAST('Future Collection' AS TEXT) WHEN (COALESCE("v_1"."visit_date_actl", "sp_1"."specimen_collection_date") IS NOT NULL AND (GETDATE() <= (CASE WHEN ("cs_1"."visit_window" LIKE CAST('%+%' AS TEXT)) THEN ("v_1"."visit_date_exp" + CAST(REGEXP_REPLACE("cs_1"."visit_window", CAST('[^0-9]' AS TEXT), CAST('' AS TEXT)) AS INT4)) ELSE "v_1"."visit_date_exp" END + CAST(7 AS INT4)))) THEN CAST('Pending' AS TEXT) WHEN (("sp_1"."specimen_collection_date" IS NULL AND COALESCE("v_1"."visit_date_actl", "sp_1"."specimen_collection_date") IS NOT NULL) AND (GETDATE() > (COALESCE("v_1"."visit_date_actl", "sp_1"."specimen_collection_date") + CAST(7 AS INT4)))) THEN CAST('Missed Collection' AS TEXT) WHEN ((COALESCE("v_1"."visit_date_actl", "sp_1"."specimen_collection_date") IS NULL AND ("ss_1"."study_subject_status" = CAST('Early Terminated' AS TEXT))) AND (("v_1"."visit_date_exp" >= "ss_1"."date_termination") OR "v_1"."visit_date_exp" IS NULL)) THEN CAST('Not Expected' AS TEXT) ELSE CAST(NULL AS TEXT) END = CAST('Missed Collection' AS TEXT)) THEN CAST(1 AS INT4) ELSE CAST(0 AS INT4) END) OVER (PARTITION BY "ss_1"."subject_id", COALESCE("cs_1"."visit_name", "cs_1"."specimen_visit_id") ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS "missed_visit_collections", CASE WHEN (SUM(CAST(1 AS INT4)) OVER (PARTITION BY "ss_1"."subject_id", COALESCE("cs_1"."visit_name", "cs_1"."specimen_visit_id") ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) = SUM(CASE WHEN (CASE WHEN ("sp_1"."specimen_collection_date" IS NOT NULL OR "sp_1"."specimen_id" IS NOT NULL) THEN CAST('Collected' AS TEXT) WHEN (((COALESCE("v_1"."visit_date_actl", "sp_1"."specimen_collection_date") IS NULL AND ((CASE WHEN ("cs_1"."visit_window" LIKE CAST('%+%' AS TEXT)) THEN ("v_1"."visit_date_exp" + CAST(REGEXP_REPLACE("cs_1"."visit_window", CAST('[^0-9]' AS TEXT), CAST('' AS TEXT)) AS INT4)) ELSE "v_1"."visit_date_exp" END + CAST(7 AS INT4)) >= GETDATE())) AND ("ss_1"."study_subject_status" <> CAST('Early Terminated' AS TEXT))) AND ("ss_1"."study_subject_status" <> CAST('Screen Failed' AS TEXT))) THEN CAST('Future Collection' AS TEXT) WHEN ((COALESCE("v_1"."visit_date_actl", "sp_1"."specimen_collection_date") IS NULL AND "v_1"."visit_date_exp" IS NULL) AND ((("ss_1"."study_subject_status" <> CAST('Screening' AS TEXT)) AND ("ss_1"."study_subject_status" <> CAST('Early Terminated' AS TEXT))) AND ("ss_1"."study_subject_status" <> CAST('Screen Failed' AS TEXT)))) THEN CAST('Future Collection' AS TEXT) WHEN (COALESCE("v_1"."visit_date_actl", "sp_1"."specimen_collection_date") IS NOT NULL AND (GETDATE() <= (CASE WHEN ("cs_1"."visit_window" LIKE CAST('%+%' AS TEXT)) THEN ("v_1"."visit_date_exp" + CAST(REGEXP_REPLACE("cs_1"."visit_window", CAST('[^0-9]' AS TEXT), CAST('' AS TEXT)) AS INT4)) ELSE "v_1"."visit_date_exp" END + CAST(7 AS INT4)))) THEN CAST('Pending' AS TEXT) WHEN (("sp_1"."specimen_collection_date" IS NULL AND COALESCE("v_1"."visit_date_actl", "sp_1"."specimen_collection_date") IS NOT NULL) AND (GETDATE() > (COALESCE("v_1"."visit_date_actl", "sp_1"."specimen_collection_date") + CAST(7 AS INT4)))) THEN CAST('Missed Collection' AS TEXT) WHEN ((COALESCE("v_1"."visit_date_actl", "sp_1"."specimen_collection_date") IS NULL AND ("ss_1"."study_subject_status" = CAST('Early Terminated' AS TEXT))) AND (("v_1"."visit_date_exp" >= "ss_1"."date_termination") OR "v_1"."visit_date_exp" IS NULL)) THEN CAST('Not Expected' AS TEXT) ELSE CAST(NULL AS TEXT) END = CAST('Missed Collection' AS TEXT)) THEN CAST(1 AS INT4) ELSE CAST(0 AS INT4) END) OVER (PARTITION BY "ss_1"."subject_id", COALESCE("cs_1"."visit_name", "cs_1"."specimen_visit_id") ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)) THEN CAST(1 AS INT4) ELSE CAST(0 AS INT4) END AS "missed_all_collections" FROM (((((((((((((((SELECT "study_subject_1"."study_subject_id" AS "study_subject_id", "study_subject_1"."study_id" AS "study_id", "study_subject_1"."subject_id" AS "subject_id", "study_subject_1"."site_id" AS "site_id", "study_subject_1"."pre_screening_id" AS "pre_screening_id", "study_subject_1"."screening_id" AS "screening_id", "study_subject_1"."re_screening_id" AS "re_screening_id", "study_subject_1"."previous_subject_id" AS "previous_subject_id", "study_subject_1"."date_screening" AS "date_screening", "study_subject_1"."date_enrollment" AS "date_enrollment", "study_subject_1"."date_screen_failure" AS "date_screen_failure", "study_subject_1"."date_termination" AS "date_termination", "study_subject_1"."date_first_treat" AS "date_first_treat", "study_subject_1"."date_last_treat" AS "date_last_treat", "study_subject_1"."date_treat_termination" AS "date_treat_termination", "study_subject_1"."icf_date" AS "icf_date", "study_subject_1"."icf_withdrawal_date" AS "icf_withdrawal_date", "study_subject_1"."icf_reconsent_date" AS "icf_reconsent_date", "study_subject_1"."icf_storage_limit" AS "icf_storage_limit", "study_subject_1"."screen_fail_icf_date" AS "screen_fail_icf_date", "study_subject_1"."icf_type" AS "icf_type", "study_subject_1"."icf_version" AS "icf_version", "study_subject_1"."cohort" AS "cohort", "study_subject_1"."study_arm" AS "study_arm", "study_subject_1"."study_part" AS "study_part", "study_subject_1"."study_subject_status" AS "study_subject_status", "study_subject_1"."age" AS "age", "study_subject_1"."age_unit" AS "age_unit", "study_subject_1"."smoke_status" AS "smoke_status", "study_subject_1"."cancer_stage" AS "cancer_stage", "study_subject_1"."previous_study_id" AS "previous_study_id", "study_subject_1"."screening_route" AS "screening_route", "study_subject_1"."ethnicity" AS "ethnicity", "study_subject_1"."race" AS "race", "study_subject_1"."gender" AS "gender", "study_subject_1"."date_prescreened" AS "date_prescreened", "study_subject_1"."date_prescreen_failed" AS "date_prescreen_failed", "study_subject_1"."run_id" AS "run_id", "study_subject_1"."composite_primary_key" AS "composite_primary_key", "study_subject_1"."row_id" AS "row_id", CASE WHEN ("study_subject_1"."cohort" = CAST('DVRd + ASCT + DVRd + lenalidomide' AS TEXT)) THEN CAST('A' AS TEXT) WHEN ("study_subject_1"."cohort" = CAST('DVRd + Cilta-cel + lenalidomide' AS TEXT)) THEN CAST('B' AS TEXT) ELSE CAST(NULL AS TEXT) END AS "arm" FROM "orbit_68284528mmy3005"."study_subject" AS "study_subject_1") AS "ss_1" LEFT JOIN (SELECT "unnamed_pivot49_1"."subject_id" AS "subject_id", "unnamed_pivot49_1"."date randomized" AS "randomization_date", "unnamed_pivot49_1"."date screened" AS "screening_date", "unnamed_pivot49_1"."date screen failed" AS "screen_failed_date" FROM (SELECT "visit_3"."subject_id" AS "subject_id", "visit_3"."visit_name" AS "visit_name", "visit_3"."visit_type" AS "visit_type", "visit_3"."visit_date_actl" AS "visit_date_actl" FROM "orbit_68284528mmy3005"."visit" AS "visit_3" WHERE "visit_3"."visit_date_actl" IS NOT NULL AND ("visit_3"."visit_type" = CAST('IWRS Signant' AS TEXT))) AS "derived_table48_1" PIVOT (MIN("derived_table48_1"."visit_date_actl") FOR "derived_table48_1"."visit_name" IN (CAST('DATE RANDOMIZED' AS VARCHAR) AS "DATE RANDOMIZED", CAST('DATE SCREENED' AS VARCHAR) AS "DATE SCREENED", CAST('DATE SCREEN FAILED' AS VARCHAR) AS "DATE SCREEN FAILED")) AS "unnamed_pivot49_1" GROUP BY "unnamed_pivot49_1"."subject_id", "unnamed_pivot49_1"."date randomized", "unnamed_pivot49_1"."date screened", "unnamed_pivot49_1"."date screen failed") AS "d1_1" ON "ss_1"."subject_id" = "d1_1"."subject_id") LEFT JOIN (SELECT "visit_4"."subject_id" AS "subject_id", "visit_4"."visit_date_actl" AS "discontinuation_date" FROM "orbit_68284528mmy3005"."visit" AS "visit_4" WHERE (("visit_4"."visit_type" = CAST('IWRS Signant' AS TEXT)) AND ("visit_4"."visit_name" LIKE CAST('DATE DISCONTINUED%' AS TEXT))) AND "visit_4"."visit_date_actl" IS NOT NULL) AS "d2_1" ON "ss_1"."subject_id" = "d2_1"."subject_id") INNER JOIN (SELECT "collection_schedule_3"."arm" AS "arm", "collection_schedule_3"."visit_name" AS "visit_name", "collection_schedule_3"."visit_window" AS "visit_window", "collection_schedule_3"."assessment" AS "assessment", "collection_schedule_3"."specimen_visit_id" AS "specimen_visit_id", "collection_schedule_3"."specimen_class" AS "specimen_class", "collection_schedule_3"."receiving_lab" AS "receiving_lab", "collection_schedule_3"."testing_lab" AS "testing_lab", "collection_schedule_3"."expected_temp" AS "expected_temp", "collection_schedule_3"."protocol_version" AS "protocol_version", CASE WHEN ("collection_schedule_3"."specimen_visit_id" LIKE CAST('AC%' AS TEXT)) THEN REGEXP_REPLACE("collection_schedule_3"."specimen_visit_id", CAST('AC' AS TEXT), CAST('C' AS TEXT)) WHEN ("collection_schedule_3"."specimen_visit_id" LIKE CAST('BC%' AS TEXT)) THEN REGEXP_REPLACE("collection_schedule_3"."specimen_visit_id", CAST('BC' AS TEXT), CAST('C' AS TEXT)) ELSE "collection_schedule_3"."specimen_visit_id" END AS "pvc_match" FROM "orbit_68284528mmy3005"."collection_schedule" AS "collection_schedule_3") AS "cs_1" ON CAST(TRUE AS BOOL)) LEFT JOIN ((SELECT "visit_5"."subject_id" AS "subject_id", "visit_5"."visit_name" AS "visit_name", "visit_5"."visit_oid" AS "visit_oid", "visit_5"."visit_date_exp" AS "visit_date_exp", "visit_5"."visit_date_actl" AS "visit_date_actl" FROM "orbit_68284528mmy3005"."visit" AS "visit_5") UNION (SELECT DISTINCT "subject_test_response_1"."subject_id" AS "subject_id", "subject_test_response_1"."subject_test_value" AS "visit_name", "subject_test_response_1"."subject_test_value" AS "visit_oid", CAST(NULL AS DATE) AS "visit_date_exp", MIN(CAST("subject_test_response_1"."subject_test_date" AS DATE)) OVER (PARTITION BY "subject_test_response_1"."subject_id", "subject_test_response_1"."subject_test_value" ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS "visit_date_actl" FROM "orbit_68284528mmy3005_outcome"."subject_test_response" AS "subject_test_response_1" WHERE (("subject_test_response_1"."subject_test_name" = CAST('Disease Response' AS TEXT)) AND ("subject_test_response_1"."subject_test_category" = CAST('IMWG CRITERIA' AS TEXT))) AND ((("subject_test_response_1"."subject_test_value" = CAST('sCR' AS TEXT)) OR ("subject_test_response_1"."subject_test_value" = CAST('CR' AS TEXT))) OR ("subject_test_response_1"."subject_test_value" = CAST('PD' AS TEXT))))) AS "v_1"("subject_id", "visit_name", "visit_oid", "visit_date_exp", "visit_date_actl") ON ("ss_1"."subject_id" = "v_1"."subject_id") AND ("cs_1"."visit_name" = "v_1"."visit_name")) LEFT JOIN (SELECT "s_4"."specimen_id" AS "specimen_id", "s_4"."accession_number" AS "accession_number", "s_4"."study_subject" AS "study_subject", "s_4"."study_id" AS "study_id", "s_4"."subject_id" AS "subject_id", "s_4"."pre_screening_id" AS "pre_screening_id", "s_4"."visit_id" AS "visit_id", "s_4"."vendor_id" AS "vendor_id", "s_4"."specimen_class" AS "specimen_class", "s_4"."specimen_type" AS "specimen_type", "s_4"."storage_location" AS "storage_location", "s_4"."storage_state" AS "storage_state", "s_4"."storage_temperature" AS "storage_temperature", "s_4"."vendor_specimen_id" AS "vendor_specimen_id", "s_4"."vendor_subject_id" AS "vendor_subject_id", "s_4"."vendor_study_id" AS "vendor_study_id", "s_4"."site_specimen_id" AS "site_specimen_id", "s_4"."specimen_condition" AS "specimen_condition", "s_4"."specimen_extract_location" AS "specimen_extract_location", "s_4"."specimen_collection_date" AS "specimen_collection_date", "s_4"."specimen_received_date" AS "specimen_received_date", "s_4"."vendor_specimen_type" AS "vendor_specimen_type", "s_4"."specimen_status" AS "specimen_status", "s_4"."specimen_accession_date" AS "specimen_accession_date", "s_4"."specimen_reporting_date" AS "specimen_reporting_date", "s_4"."repeat_status" AS "repeat_status", "s_4"."repeat_times" AS "repeat_times", "s_4"."number_of_slides" AS "number_of_slides", "s_4"."number_of_slides_needed" AS "number_of_slides_needed", "s_4"."reason_qualified_or_failed" AS "reason_qualified_or_failed", "s_4"."sample_pass_fail_status" AS "sample_pass_fail_status", "s_4"."run_id" AS "run_id", "s_4"."composite_primary_key" AS "composite_primary_key", "s_4"."row_id" AS "row_id", "st_sm_1"."inferred_sm" AS "inferred_sm", CASE WHEN ("s_4"."visit_id" LIKE CAST('%CC%D%' AS TEXT)) THEN SPLIT_PART(LTRIM(SPLIT_PART("s_4"."visit_id", CAST('CC' AS TEXT), CAST(2 AS INT4)), CAST('0' AS TEXT)), CAST('D' AS TEXT), CAST(1 AS INT4)) WHEN ("s_4"."visit_id" LIKE CAST('%C%D%' AS TEXT)) THEN SPLIT_PART(LTRIM(SPLIT_PART("s_4"."visit_id", CAST('C' AS TEXT), CAST(2 AS INT4)), CAST('0' AS TEXT)), CAST('D' AS TEXT), CAST(1 AS INT4)) ELSE CAST(NULL AS TEXT) END AS "cycle", CASE WHEN ("s_4"."visit_id" LIKE CAST('%C%D%' AS TEXT)) THEN LTRIM(SPLIT_PART("s_4"."visit_id", CAST('D' AS TEXT), CAST(2 AS INT4)), CAST('0' AS TEXT)) ELSE CAST(NULL AS TEXT) END AS "day", CONCAT(CAST('C' AS TEXT), CONCAT(CASE WHEN ("s_4"."visit_id" LIKE CAST('%CC%D%' AS TEXT)) THEN SPLIT_PART(LTRIM(SPLIT_PART("s_4"."visit_id", CAST('CC' AS TEXT), CAST(2 AS INT4)), CAST('0' AS TEXT)), CAST('D' AS TEXT), CAST(1 AS INT4)) WHEN ("s_4"."visit_id" LIKE CAST('%C%D%' AS TEXT)) THEN SPLIT_PART(LTRIM(SPLIT_PART("s_4"."visit_id", CAST('C' AS TEXT), CAST(2 AS INT4)), CAST('0' AS TEXT)), CAST('D' AS TEXT), CAST(1 AS INT4)) ELSE CAST(NULL AS TEXT) END, CONCAT(CAST('D' AS TEXT), CASE WHEN ("s_4"."visit_id" LIKE CAST('%C%D%' AS TEXT)) THEN LTRIM(SPLIT_PART("s_4"."visit_id", CAST('D' AS TEXT), CAST(2 AS INT4)), CAST('0' AS TEXT)) ELSE CAST(NULL AS TEXT) END))) AS "visit_clean", CASE WHEN ("s_4"."vendor_id" = CAST(21 AS INT4)) THEN SPLIT_PART("s_4"."visit_id", CAST('|' AS TEXT), CAST(2 AS INT4)) WHEN ("s_4"."vendor_id" = CAST(3 AS INT4)) THEN COALESCE(CONCAT(CAST('C' AS TEXT), CONCAT(CASE WHEN ("s_4"."visit_id" LIKE CAST('%CC%D%' AS TEXT)) THEN SPLIT_PART(LTRIM(SPLIT_PART("s_4"."visit_id", CAST('CC' AS TEXT), CAST(2 AS INT4)), CAST('0' AS TEXT)), CAST('D' AS TEXT), CAST(1 AS INT4)) WHEN ("s_4"."visit_id" LIKE CAST('%C%D%' AS TEXT)) THEN SPLIT_PART(LTRIM(SPLIT_PART("s_4"."visit_id", CAST('C' AS TEXT), CAST(2 AS INT4)), CAST('0' AS TEXT)), CAST('D' AS TEXT), CAST(1 AS INT4)) ELSE CAST(NULL AS TEXT) END, CONCAT(CAST('D' AS TEXT), CASE WHEN ("s_4"."visit_id" LIKE CAST('%C%D%' AS TEXT)) THEN LTRIM(SPLIT_PART("s_4"."visit_id", CAST('D' AS TEXT), CAST(2 AS INT4)), CAST('0' AS TEXT)) ELSE CAST(NULL AS TEXT) END))), "s_4"."visit_id") WHEN ((("s_4"."vendor_id" = CAST(5 AS INT4)) AND ("s_4"."specimen_type" = CAST('BMA' AS TEXT))) AND (("s_4"."visit_id" = CAST('Post Infusion D21' AS TEXT)) OR ("s_4"."visit_id" = CAST('Post Infusion D28' AS TEXT)))) THEN CAST('Post Infusion D21, Post Infusion D28' AS VARCHAR) WHEN ("s_4"."visit_id" LIKE CAST('COND%' AS TEXT)) THEN CAST('COND' AS VARCHAR) WHEN (LOWER("s_4"."visit_id") LIKE CAST('%uns%' AS TEXT)) THEN CAST('UNSCHEDULED' AS VARCHAR) ELSE "s_4"."visit_id" END AS "sp_visit_id_match", CASE WHEN ("s_4"."vendor_id" = CAST(3 AS INT4)) THEN pg_catalog.SUBSTRING(COALESCE("s_4"."vendor_specimen_type", "st_sm_1"."inferred_sm"), CAST(1 AS INT4), CAST(4 AS INT4)) WHEN ("s_4"."vendor_id" = CAST(5 AS INT4)) THEN "s_4"."specimen_type" ELSE "s_4"."specimen_class" END AS "vend_spec_type" FROM "orbit_68284528mmy3005"."specimen" AS "s_4" LEFT JOIN (SELECT "specimen_test_6"."specimen_id" AS "specimen_id", "specimen_test_6"."test_code" AS "test_code", CASE WHEN ("specimen_test_6"."test_code" = CAST('SCT2447' AS TEXT)) THEN CAST('SM01' AS TEXT) WHEN ("specimen_test_6"."test_code" = CAST('SCT3618' AS TEXT)) THEN CAST('SM02' AS TEXT) WHEN ("specimen_test_6"."test_code" = CAST('SCT4108' AS TEXT)) THEN CAST('SM03' AS TEXT) WHEN ("specimen_test_6"."test_code" = CAST('RCT4559' AS TEXT)) THEN CAST('SM04' AS TEXT) WHEN ("specimen_test_6"."test_code" = CAST('X0014-SE' AS TEXT)) THEN CAST('SM08' AS TEXT) WHEN ("specimen_test_6"."test_code" = CAST('XXXX' AS TEXT)) THEN CAST('SM09' AS TEXT) ELSE CAST(NULL AS TEXT) END AS "inferred_sm" FROM "orbit_68284528mmy3005"."specimen_test" AS "specimen_test_6" WHERE (((("specimen_test_6"."test_code" = CAST('SCT2447' AS TEXT)) OR ("specimen_test_6"."test_code" = CAST('SCT3618' AS TEXT))) OR ("specimen_test_6"."test_code" = CAST('SCT4108' AS TEXT))) OR ("specimen_test_6"."test_code" = CAST('RCT4559' AS TEXT))) OR ("specimen_test_6"."test_code" = CAST('X0014-SE' AS TEXT))) AS "st_sm_1" ON "s_4"."specimen_id" = "st_sm_1"."specimen_id") AS "sp_1" ON (("ss_1"."subject_id" = "sp_1"."subject_id") AND ((("cs_1"."pvc_match" <> CAST('DISEASE EVALUATION IGD OR IGE' AS TEXT)) AND ("cs_1"."pvc_match" = "sp_1"."sp_visit_id_match")) OR (("cs_1"."pvc_match" = CAST('DISEASE EVALUATION IGD OR IGE' AS TEXT)) AND (("sp_1"."specimen_collection_date" >= ("v_1"."visit_date_actl" - CAST('3 days' AS INTERVAL))) AND ("sp_1"."specimen_collection_date" <= ("v_1"."visit_date_actl" + CAST('3 days' AS INTERVAL))))))) AND (("cs_1"."specimen_class" IS NOT NULL AND ("cs_1"."specimen_class" = "sp_1"."vend_spec_type")) OR "cs_1"."specimen_class" IS NULL)) LEFT JOIN (SELECT DISTINCT "collection_schedule_4"."assessment" AS "assessment", "collection_schedule_4"."receiving_lab" AS "receiving_lab", "collection_schedule_4"."specimen_class" AS "specimen_class", "collection_schedule_4"."specimen_visit_id" AS "specimen_visit_id" FROM "orbit_68284528mmy3005"."collection_schedule" AS "collection_schedule_4") AS "cs2_1" ON "sp_1"."vend_spec_type" = "cs2_1"."specimen_class") LEFT JOIN "orbit_68284528mmy3005"."study_site" AS "sst_1" ON ("ss_1"."site_id" = "sst_1"."site_id") AND ("ss_1"."study_id" = "sst_1"."study_id")) LEFT JOIN "orbit_68284528mmy3005"."site" AS "s_3" ON (("ss_1"."site_id" = "s_3"."site_id") AND ("ss_1"."study_id" = "s_3"."study_id")) AND ("sst_1"."site_country" = "s_3"."site_country_code")) LEFT JOIN (SELECT DISTINCT "specimen_3"."subject_id" AS "subject_id", "specimen_3"."visit_id" AS "visit_id", "specimen_3"."specimen_collection_date" AS "specimen_collection_date" FROM "orbit_68284528mmy3005"."specimen" AS "specimen_3") AS "sv_1" ON ("cs_1"."specimen_visit_id" = "sv_1"."visit_id") AND ("v_1"."subject_id" = "sv_1"."subject_id")) LEFT JOIN (SELECT "specimen_test_7"."specimen_id" AS "specimen_id", "specimen_test_7"."test_result_orig_value" AS "open_dcf" FROM "orbit_68284528mmy3005"."specimen_test" AS "specimen_test_7" WHERE ("specimen_test_7"."vendor_id" = CAST(5 AS INT4)) AND ("specimen_test_7"."test_name" = CAST('OpenDcf' AS TEXT))) AS "st1_1" ON "sp_1"."specimen_id" = "st1_1"."specimen_id") LEFT JOIN (SELECT DISTINCT COALESCE("s_5"."subject_id", "s_5"."vendor_subject_id") AS "subject_id", "s_5"."visit_id" AS "visit_id", LISTAGG("st_1"."test_result_orig_value", CAST('; ' AS TEXT)) AS "all_ig_status", MIN("st_1"."test_result_date") AS "ig_test_date", CASE WHEN ((LISTAGG("st_1"."test_result_orig_value", CAST('; ' AS TEXT)) LIKE CAST('%IgE%' AS TEXT)) AND (LISTAGG("st_1"."test_result_orig_value", CAST('; ' AS TEXT)) LIKE CAST('%IgD%' AS TEXT))) THEN CAST('IgE Positive & IgD Positive' AS TEXT) WHEN ((LISTAGG("st_1"."test_result_orig_value", CAST('; ' AS TEXT)) LIKE CAST('%IgE%' AS TEXT)) AND (LISTAGG("st_1"."test_result_orig_value", CAST('; ' AS TEXT)) LIKE CAST('%IgD%' AS TEXT))) THEN CAST('IgE Positive & IgD Positive' AS TEXT) WHEN (LISTAGG("st_1"."test_result_orig_value", CAST('; ' AS TEXT)) LIKE CAST('%IgE%' AS TEXT)) THEN CAST('IgE Positive' AS TEXT) WHEN (LISTAGG("st_1"."test_result_orig_value", CAST('; ' AS TEXT)) LIKE CAST('%IgD%' AS TEXT)) THEN CAST('IgD Positive' AS TEXT) WHEN LISTAGG("st_1"."test_result_orig_value", CAST('; ' AS TEXT)) IS NULL THEN CAST(NULL AS TEXT) ELSE CAST('Negative' AS TEXT) END AS "igd_ige_status" FROM (SELECT "specimen_4"."specimen_id" AS "specimen_id", "specimen_4"."subject_id" AS "subject_id", "specimen_4"."vendor_subject_id" AS "vendor_subject_id", "specimen_4"."visit_id" AS "visit_id" FROM "orbit_68284528mmy3005"."specimen" AS "specimen_4" WHERE "specimen_4"."visit_id" = CAST('SCRN' AS TEXT)) AS "s_5" LEFT JOIN (SELECT "specimen_test_8"."specimen_id" AS "specimen_id", "specimen_test_8"."test_code" AS "test_code", "specimen_test_8"."test_result_orig_value" AS "test_result_orig_value", "specimen_test_8"."test_result_date" AS "test_result_date" FROM "orbit_68284528mmy3005"."specimen_test" AS "specimen_test_8" WHERE (("specimen_test_8"."test_code" = CAST('SCT2466' AS TEXT)) OR ("specimen_test_8"."test_code" = CAST('SCT2467' AS TEXT))) OR ("specimen_test_8"."test_code" = CAST('SCT2468' AS TEXT))) AS "st_1" ON "s_5"."specimen_id" = "st_1"."specimen_id" GROUP BY "s_5"."subject_id", "s_5"."vendor_subject_id", "s_5"."visit_id") AS "st2_1" ON "ss_1"."subject_id" = "st2_1"."subject_id") LEFT JOIN (SELECT "specimen_test_9"."specimen_id" AS "specimen_id", "specimen_test_9"."test_name" AS "test_name", "specimen_test_9"."test_code" AS "test_code", "specimen_test_9"."test_result_date" AS "test_result_date", "specimen_test_9"."test_result_orig_value" AS "test_result_orig_value", "specimen_test_9"."test_result_orig_value_cancelled" AS "test_result_orig_value_cancelled", CASE WHEN ("specimen_test_9"."test_code" = CAST('SCT2447' AS TEXT)) THEN CAST('SPEP/SIFE (SCT2447)' AS TEXT) WHEN ("specimen_test_9"."test_code" = CAST('SCT3618' AS TEXT)) THEN CAST('UPEP (24-hour urine)/UIFE (SCT3618)' AS TEXT) WHEN ("specimen_test_9"."test_code" = CAST('SCT4108' AS TEXT)) THEN CAST('Serum FLC (SCT4108)' AS TEXT) WHEN ("specimen_test_9"."test_code" = CAST('RCT4559' AS TEXT)) THEN CAST('Serum quantitative Igs (RCT4559)' AS TEXT) WHEN ("specimen_test_9"."test_code" = CAST('X0014-SE' AS TEXT)) THEN CAST('Cytokine profiling (serum) (X0014-SE)' AS TEXT) ELSE CAST(NULL AS TEXT) END AS "assessment_test", CASE WHEN "specimen_test_9"."test_result_orig_value" IS NOT NULL THEN CAST('Done' AS TEXT) WHEN ("specimen_test_9"."test_result_orig_value" IS NULL OR "specimen_test_9"."test_result_orig_value_cancelled" IS NOT NULL) THEN CAST('Not Done' AS TEXT) ELSE CAST(NULL AS TEXT) END AS "assessment_completed" FROM "orbit_68284528mmy3005"."specimen_test" AS "specimen_test_9" WHERE (((("specimen_test_9"."test_code" = CAST('SCT2447' AS TEXT)) OR ("specimen_test_9"."test_code" = CAST('SCT3618' AS TEXT))) OR ("specimen_test_9"."test_code" = CAST('SCT4108' AS TEXT))) OR ("specimen_test_9"."test_code" = CAST('RCT4559' AS TEXT))) OR ("specimen_test_9"."test_code" = CAST('X0014-SE' AS TEXT))) AS "st3_1" ON "sp_1"."specimen_id" = "st3_1"."specimen_id") LEFT JOIN (SELECT pg_catalog.LEFT("specimen_test_10"."specimen_id", CAST(10 AS INT4)) AS "accession_number", "specimen_test_10"."test_result_orig_value" AS "collection_criteria" FROM "orbit_68284528mmy3005"."specimen_test" AS "specimen_test_10" WHERE "specimen_test_10"."test_code" = CAST('AMT13129' AS TEXT)) AS "st4_1" ON "sp_1"."accession_number" = "st4_1"."accession_number") LEFT JOIN (SELECT "specimen_5"."specimen_id" AS "specimen_id", SPLIT_PART(SPLIT_PART("specimen_5"."storage_temperature", CAST('Expected Temperature: ' AS TEXT), CAST(2 AS INT4)), CAST('|' AS TEXT), CAST(1 AS INT4)) AS "cerba_expected_temp", SPLIT_PART("specimen_5"."storage_temperature", CAST('Reception Temperature: ' AS TEXT), CAST(2 AS INT4)) AS "cerba_actual_temp" FROM "orbit_68284528mmy3005"."specimen" AS "specimen_5" WHERE "specimen_5"."vendor_id" = CAST(5 AS INT4)) AS "st5_1" ON "sp_1"."specimen_id" = "st5_1"."specimen_id") LEFT JOIN (SELECT "specimen_test_11"."specimen_id" AS "specimen_id", CASE WHEN "specimen_test_11"."test_status" IS NULL THEN CAST('CLONE ID ESTABLISHED' AS VARCHAR) ELSE "specimen_test_11"."test_status" END AS "mrd_clone_status", "specimen_test_11"."basline_flag" AS "mrd_baseline" FROM "orbit_68284528mmy3005"."specimen_test" AS "specimen_test_11" WHERE "specimen_test_11"."test_code" = CAST('CLONEFRQ' AS TEXT)) AS "st6_1" ON "sp_1"."specimen_id" = "st6_1"."specimen_id" WHERE ((("ss_1"."arm" = "cs_1"."arm") AND "ss_1"."arm" IS NOT NULL) OR ("cs_1"."visit_name" = CAST('SCREENING' AS TEXT))) OR ((("cs_1"."specimen_visit_id" = CAST('UNSCHEDULED' AS TEXT)) OR ("cs_1"."specimen_visit_id" = CAST('MMRETEST' AS TEXT))) AND (ROW("sp_1"."vend_spec_type") = ANY (SELECT "collection_schedule_5"."specimen_class" AS "specimen_class" FROM "orbit_68284528mmy3005"."collection_schedule" AS "collection_schedule_5"))) ORDER BY "ss_1"."subject_id" ASC NULLS LAST, "sp_1"."specimen_collection_date" ASC NULLS LAST, "v_1"."visit_date_actl" ASC NULLS LAST, "v_1"."visit_date_exp" ASC NULLS LAST) AS "collection_data" WHERE "collection_data"."visit_date_actl" IS NOT NULL) AS "cm" GROUP BY "cm"."subject_id", "cm"."grp") AS "ms" ON "cd"."subject_id" = "ms"."subject_id";
