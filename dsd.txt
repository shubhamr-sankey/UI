 $('#uploadButton').click(function (e) {
     e.preventDefault(); // Prevent default form submission

     var fileInput = $('#fileUpload')[0]; // Get the file input
     var file = fileInput.files[0]; // Get the selected file

     if (!file) {
         alert("Please select a file.");
         return;
     }

     // Create a FileReader to read the file
     const reader = new FileReader();
     reader.onload = function (event) {
         const data = event.target.result;
         const workbook = XLSX.read(data, { type: 'binary' });

         // Assuming the data is in the first sheet
         const sheet = workbook.Sheets[workbook.SheetNames[0]];
         const rows = XLSX.utils.sheet_to_json(sheet, { header: 1 }); // Read as an array of rows

         // Find the index of the "UserEmail" and "AccessLevel" columns
         const emailColumnIndex = rows[0].indexOf('UserEmail');
         const accessLevelColumnIndex = rows[0].indexOf('AccessLevel');

         // Validate if the columns exist
         if (emailColumnIndex === -1) {
             alert("No 'UserEmail' column found in the file.");
             return; // Prevent further execution
         }
         if (accessLevelColumnIndex === -1) {
             alert("No 'AccessLevel' column found in the file.");
             return; // Prevent further execution
         }

         // Initialize arrays to hold invalid rows for both email and access level
         let invalidEmailRows = [];
         let invalidAccessLevelRows = [];
         const emailRegex = /^[a-zA-Z0-9._-]+(@@)[a-zA-Z0-9.-]+\.[a-zA-Z]{2,6}$/; // Fixed email regex

         // Loop through each row to validate both email and access level
         for (let i = 1; i < rows.length; i++) {
             const email = rows[i][emailColumnIndex];
             const accessLevel = rows[i][accessLevelColumnIndex];

             // Validate the email address
             if (email && !emailRegex.test(email)) {
                 invalidEmailRows.push({
                     row: i + 1,
                     column: 'UserEmail',
                     email: email
                 });
             }

             // Validate the AccessLevel column (check if it contains C, R, U, D, or E)
             const accessLevelValidRegex = /[CRUDV]/i; // Regex to check if any of 'C', 'R', 'U', 'D', 'E' exists
             if (accessLevel && !accessLevelValidRegex.test(accessLevel)) {
                 invalidAccessLevelRows.push({
                     row: i + 1,
                     column: 'AccessLevel',
                     accessLevel: accessLevel
                 });
             }
         }

         // Combine invalid email and access level rows into a single array
         let invalidRows = [...invalidEmailRows, ...invalidAccessLevelRows];

         // Show the result in a popup (alert)
         if (invalidRows.length > 0) {
             let resultMessage = 'Invalid Entries Found:\n\n';
             invalidRows.forEach(item => {
                 if (item.column === 'UserEmail') {
                     resultMessage += `Row ${item.row}, Column ${item.column} - Invalid Email: ${item.email}\n`;
                 } else if (item.column === 'AccessLevel') {
                     resultMessage += `Row ${item.row}, Column ${item.column} - Invalid AccessLevel: ${item.accessLevel}\n`;
                 }
             });
             alert(resultMessage);
         } else {
             // If all emails and access levels are valid, proceed with file upload via AJAX
             var formData = new FormData();
             formData.append('file', file); // Append the file to FormData

             // Include the anti-forgery token in the request
             var token = $('input[name="__RequestVerificationToken"]').val();
             formData.append('__RequestVerificationToken', token);

             $.ajax({
                 url: '@Url.Action("UploadExcel", "UserRoleAccessMapping")', // Replace with your action URL
                 type: 'POST',
                 dataType: 'json',
                 data: formData, // Send the FormData object
                 processData: false, // Important for file uploads
                 contentType: false, // Important for file uploads
                 success: function (data) {
                     if (data.success) {
                         alert("File processed successfully.");
                     } else {
                         alert("Error processing file: " + data.errorMessages);
                     }
                 },
                 error: function (xhr, status, error) {
                     alert("Success done.");
                 }
             });
         }
     };

     // Read the uploaded file as a binary string
     reader.readAsBinaryString(file);
 });

 $(document).ready(function () {
     modelData = @Html.Raw(Json.Encode(Model));
     console.log("modelData ", modelData);
     $('#RoleName').change(function () {
         var selectedRoleName = $(this).val();
         console.log('selectedRoleName', selectedRoleName)
         var selectedAccessName = document.getElementById('AccessName').value;
         var selectedCountryName = document.getElementById('CountryName').value;
         var selectedScreenName = document.getElementById('ScreenName').value;
         var searchedValue = document.getElementById("searchFieldActiveDeals").value;
         var targetUrl = '@Url.Action("UserRoleAccessMappingTableData", "UserRoleAccessMapping")';
         var param = {
             roleName: selectedRoleName, accessName: selectedAccessName, countryName: selectedCountryName,
             screenName: selectedScreenName, searchValue: searchedValue.trim(),
             skip: 0
         };
         showLoader();
         $.ajax({
             url: targetUrl,
             type: 'GET',
             data: param,
             success: function (response) {
                 if (response == "Error") {
                     hideLoader();
                     var Message = document.getElementById("submitMessage");
                     Message.innerHTML = "something went wrong. Please try again";
                     Message.style = "color:red";
                     $('#saveAccessDetailspopUp').modal({
                         backdrop: 'static',
                         keyboard: false
                     });
                 }
                 else {
                     hideLoader();
                     console.log('response ', response);
                     $('#tableContainer').html(response);
                 }
             },
             error: function (xhr, status, error) {
                 console.error("AJAX Error: " + status + error);
                 hideLoader();
             }
         });
     });

     $('#AccessName').change(function () {
         var selectedAccessName = $(this).val();
         console.log('selectedAccessName', selectedAccessName)
         var selectedRoleName = document.getElementById('RoleName').value;
         var selectedCountryName = document.getElementById('CountryName').value;
         var selectedScreenName = document.getElementById('ScreenName').value;
         var searchedValue = document.getElementById("searchFieldActiveDeals").value;
         var targetUrl = '@Url.Action("UserRoleAccessMappingTableData", "UserRoleAccessMapping")';
         var param = {
             roleName: selectedRoleName, accessName: selectedAccessName, countryName: selectedCountryName,
             screenName: selectedScreenName, searchValue: searchedValue.trim(),
             skip: 0
         };
         showLoader();
         $.ajax({
             url: targetUrl,
             type: 'GET',
             data: param,
             success: function (response) {
                 if (response == "Error") {
                     hideLoader();
                     var Message = document.getElementById("submitMessage");
                     Message.innerHTML = "something went wrong. Please try again";
                     Message.style = "color:red";
                     $('#saveAccessDetailspopUp').modal({
                         backdrop: 'static',
                         keyboard: false
                     });
                 }
                 else {
                     hideLoader();
                     console.log('response ', response);
                     $('#tableContainer').html(response);
                 }
             },
             error: function (xhr, status, error) {
                 console.error("AJAX Error: " + status + error);
                 hideLoader();
             }
         });
     });

     $('#CountryName').change(function () {
         var selectedCountryName = $(this).val();
         console.log('selectedCountryName', selectedAccessName)
         var selectedRoleName = document.getElementById('RoleName').value;
         var selectedAccessName = document.getElementById('AccessName').value;
         var selectedScreenName = document.getElementById('ScreenName').value;
         var searchedValue = document.getElementById("searchFieldActiveDeals").value;
         var targetUrl = '@Url.Action("UserRoleAccessMappingTableData", "UserRoleAccessMapping")';
         var param = {
             roleName: selectedRoleName, accessName: selectedAccessName, countryName: selectedCountryName,
             screenName: selectedScreenName, searchValue: searchedValue.trim(),
             skip: 0
         }
         showLoader();
         $.ajax({
             url: targetUrl,
             type: 'GET',
             data: param,
             success: function (response) {
                 if (response == "Error") {
                     hideLoader();
                     var Message = document.getElementById("submitMessage");
                     Message.innerHTML = "something went wrong. Please try again";
                     Message.style = "color:red";
                     $('#saveAccessDetailspopUp').modal({
                         backdrop: 'static',
                         keyboard: false
                     });
                 }
                 else {
                     hideLoader();
                     console.log('response ', response);
                     $('#tableContainer').html(response);
                 }
             },
             error: function (xhr, status, error) {
                 console.error("AJAX Error: " + status + error);
                 hideLoader();
             }
         });
     });

     $('#ScreenName').change(function () {
         var selectedScreenName = $(this).val();
         console.log('selectedScreenName', selectedAccessName)
         var selectedRoleName = document.getElementById('RoleName').value;
         var selectedAccessName = document.getElementById('AccessName').value;
         var selectedCountryName = document.getElementById('CountryName').value;
         var searchedValue = document.getElementById("searchFieldActiveDeals").value;
         var targetUrl = '@Url.Action("UserRoleAccessMappingTableData", "UserRoleAccessMapping")';
         var param = {
             roleName: selectedRoleName, accessName: selectedAccessName, countryName: selectedCountryName,
             screenName: selectedScreenName, searchValue: searchedValue.trim(),
             skip: 0
         };
         showLoader();
         $.ajax({
             url: targetUrl,
             type: 'GET',
             data: param,
             success: function (response) {
                 if (response == "Error") {
                     hideLoader();
                     var Message = document.getElementById("submitMessage");
                     Message.innerHTML = "something went wrong. Please try again";
                     Message.style = "color:red";
                     $('#saveAccessDetailspopUp').modal({
                         backdrop: 'static',
                         keyboard: false
                     });
                 }
                 else {
                     hideLoader();
                     console.log('response ', response);
                     $('#tableContainer').html(response);
                 }
             },
             error: function (xhr, status, error) {
                 console.error("AJAX Error: " + status + error);
                 hideLoader();
             }
         });
     });
 });
