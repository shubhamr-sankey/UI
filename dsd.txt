<!DOCTYPE html>
<html>
<head>
    <title>File Upload and Email Validation</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.4/xlsx.full.min.js"></script> <!-- Include SheetJS library -->
</head>
<body>
    <h1>Welcome to My Page</h1>
    <button onclick="showAlert()">Click Me</button>
    <br><br>
    
    <!-- File upload input -->
    <input type="file" id="fileUpload" accept=".xlsx, .xls" />
    <br><br>
    <button onclick="validateEmails()">Validate Emails</button>
    
    <div id="validationResult"></div>

    <script type="text/javascript">
        function showAlert() {
            alert("This is an alert message!");
        }

        // Function to validate emails
        function validateEmails() {
            const fileInput = document.getElementById('fileUpload');
            if (!fileInput.files.length) {
                alert("Please upload a file first.");
                return;
            }

            const file = fileInput.files[0];

            // Read the file using FileReader
            const reader = new FileReader();
            reader.onload = function(event) {
                const data = event.target.result;
                const workbook = XLSX.read(data, { type: 'binary' });

                // Assuming the data is in the first sheet
                const sheet = workbook.Sheets[workbook.SheetNames[0]];
                const rows = XLSX.utils.sheet_to_json(sheet, { header: 1 }); // Read as an array of rows

                // Find the index of the "useremail" column
                const emailColumnIndex = rows[0].indexOf('useremail');
                if (emailColumnIndex === -1) {
                    alert("No 'useremail' column found in the file.");
                    return;
                }

                // Validate email in each row
                let invalidRows = [];
                const emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,6}$/;

                for (let i = 1; i < rows.length; i++) { // Start from 1 to skip header row
                    const email = rows[i][emailColumnIndex];
                    if (email && !emailRegex.test(email)) {
                        invalidRows.push({
                            row: i + 1,  // Row number starts from 1
                            column: 'useremail',
                            email: email
                        });
                    }
                }

                // Show the result
                const resultDiv = document.getElementById('validationResult');
                if (invalidRows.length > 0) {
                    resultDiv.innerHTML = '<h3>Invalid Emails Found:</h3>';
                    invalidRows.forEach(item => {
                        resultDiv.innerHTML += `<p>Row ${item.row}, Column ${item.column} - Invalid Email: ${item.email}</p>`;
                    });
                } else {
                    resultDiv.innerHTML = '<p>All emails are valid!</p>';
                }
            };

            // Read the uploaded file as binary string
            reader.readAsBinaryString(file);
        }
    </script>
</body>
</html>
